/*
 * Copyright (C) 2016-2017 F&S Elektronik Systeme GmbH
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

/* CMA: Set 64 MB for Continuous Memory Allocator */
#define CONFIG_PICOCOM1_2_CMA_SIZE 0x4000000

/* NAND */
#define CONFIG_PICOCOM1_2_NAND

/* Network */
#define CONFIG_PICOCOM1_2_ETH0

/* UART_C or SD CD/WP pins, undefine UART_C if you want to use
 * SD CD/WP pins
 */
#define CONFIG_PICOCOM1_2_UART_C_RTSCTS

/* SPI_B or UART_E, undefine SPI_B if you want to use UART_E */
#define CONFIG_PICOCOM1_2_SPI_B

/* Audio devices */
#define CONFIG_PICOCOM1_2_SGTL5000

/* MQS is not supported in F&S standard and is not tested */
//#define CONFIG_PICOCOM1_2_MQS

/* Either PWM or ADC can be used */
#define CONFIG_PICOCOM1_2_PWM
//#define CONFIG_PICOCOM1_2_ADC

#include <dt-bindings/input/input.h>
#include "imx6ul.dtsi"

/ {
	model = "F&S PicoCOM1.2";
	compatible = "fsl,imx6ul-picocom1.2", "fsl,imx6ul";

	aliases {
		i2c3 = &i2c_gpio;
	};

#if 0
chosen {
		stdout-path = &uart1;
	};
#endif
	memory {
		reg = <0x80000000 0x80000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_vref_3v3: regulator_3v3 {
			compatible = "regulator-fixed";
			regulator-name = "vref-3V3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_can: regulator_can {
			compatible = "regulator-fixed";
			regulator-name = "can";
		};

#ifdef CONFIG_PICOCOM1_2_WLAN
		reg_wlan_vmmc_1v8: regulator_wlan {
			compatible = "regulator-fixed";
			regulator-name = "vmmc-wlan-1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-always-on;
		};
#endif

		reg_dvfs: regulator_dvfs {
			compatible = "regulator-fixed";
			regulator-min-microvolt = <1325000>;
			regulator-max-microvolt = <1325000>;
			regulator-name = "dvfs";
			regulator-always-on;
		};

		/* USB_OTG1_PWR done by USB controller, no regulator needed */
#if 0 //###
		reg_usb_otg1_vbus: usb_otg1_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb_otg1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio2 8 0>;
			enable-active-high;
		};
#endif //###

		/* USB_OTG2_PWR done by USB controller, no regulator needed */
#if 0 //###
		reg_usb_otg2_vbus: usb_otg2_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb_otg2_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio2 12 0>;
			enable-active-high;
		};
#endif //###

#ifdef CONFIG_PICOCOM1_2_SGTL5000
		/* SGTL5000 analog voltage */
		reg_sgtl5000_vdda: sgtl5000_vdda {
			compatible = "regulator-fixed";
			regulator-name = "VDDA-supply";
			regulator-min-microvolt = <3000000>;
			regulator-max-microvolt = <3000000>;
			regulator-always-on;
		};

		/* SGTL5000 I/O voltage */
		reg_sgtl5000_vddio: sgtl5000_vddio {
			compatible = "regulator-fixed";
			regulator-name = "VDDIO-supply";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		/* SGTL5000 internal digital voltage */
		reg_sgtl5000_vddd: sgtl5000_vddd {
			compatible = "regulator-fixed";
			regulator-name = "VDDD-supply";
			regulator-min-microvolt = <1350000>;
			regulator-max-microvolt = <1350000>;
			regulator-always-on;
		};
#endif
	};

#ifdef CONFIG_PICOCOM1_2_SGTL5000
	sound-sgtl5000 {
		compatible = "fsl,imx-audio-sgtl5000";
		cpu-dai = <&sai1>;
		audio-codec = <&sgtl5000>;
		model = "imx-sgtl5000";

		audio-routing =
		"LINE_IN", "Line In Jack",
		//"MIC_IN", "Mic Jack",
		//"Line Out Jack", "LINE_OUT",
		"Headphone Jack", "HP_OUT";
	};
#endif

#if defined(CONFIG_PICOCOM1_2_MQS) && !defined(CONFIG_PICOCOM1_2_SGTL5000)
	sound-mqs {
		compatible = "fsl,imx-audio-mqs";
		model = "mqs-audio";
		cpu-dai = <&sai1>;
		asrc-controller = <&asrc>;
		audio-codec = <&mqs>;
	};
#endif

	/* Bitbanging I2C_C */
	i2c_gpio: i2c_gpio {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c_gpio>;
		compatible = "i2c-gpio";
		gpios = <&gpio5 8 0 /* sda */
			 &gpio5 9 0 /* scl */
			>;
//###		i2c-gpio,sda-open-drain;
//###		i2c-gpio,scl-open-drain;
		i2c-gpio,delay-us = <2>;	/* ~100 kHz */
		#address-cells = <1>;
		#size-cells = <0>;
	};

	/* F&S board information */
	bdinfo {
		compatible = "bdinfo";
		board_name = "PicoCOM1.2";
		ecc_strength = "8";
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_status_leds>;

		status_1 {
			label = "Status1";
			gpios = <&gpio5 0 GPIO_ACTIVE_HIGH>;
			default-state = "keep";
		};

		status_2 {
			label = "Status2";
			gpios = <&gpio5 1 GPIO_ACTIVE_HIGH>;
			default-state = "keep";
		};
	};
};

/* RAM size for Continues Memory Allocator */
&cma {
	size = <CONFIG_PICOCOM1_2_CMA_SIZE>;
};

&cpu0 {
	arm-supply = <&reg_arm>;
	soc-supply = <&reg_soc>;
	dc-supply = <&reg_dvfs>;
};

&clks {
	/* Set audio clock rate, output on CKO1 */
	assigned-clocks = <&clks IMX6UL_CLK_PLL4_AUDIO_DIV>,
			<&clks IMX6UL_CLK_SAI1_SEL>,
			<&clks IMX6UL_CLK_SAI1>;

	assigned-clock-parents =<0>,
			<&clks IMX6UL_CLK_PLL4_AUDIO_DIV>,
			<0>;

#if defined(CONFIG_PICOCOM1_2_MQS) && !defined(CONFIG_PICOCOM1_2_SGTL5000)
	assigned-clock-rates = <786432000>, <0>, <24576000>;
#elif define CONFIG_PICOCOM1_2_SGTL5000
	assigned-clock-rates = <786432000>, <0>, <12288000>;
#endif
};

#ifdef CONFIG_PICOCOM1_2_ETH0
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	assigned-clocks = <&clks IMX6UL_CLK_ENET_REF>;
	assigned-clock-rates = <50000000>;
	phy-mode = "rmii";
	phy-handle = <&ethphy0>;
	phy-supply = <&reg_vref_3v3>;
	fsl,ref-clock-out;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
		};
	};
};
#endif

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&reg_can>;
	status = "okay";
};

&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	xceiver-supply = <&reg_can>;
	status = "okay";
};

#ifdef CONFIG_PICOCOM1_2_PWM
&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "okay";
};

&pwm4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm4>;
	status = "okay";
};

#elif CONFIG_PICOCOM1_2_ADC
&adc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_adc1>;
	vref-supply = <&reg_vref_3v3>;
	num-channels = <10>;
	status = "okay";
};
#endif

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm3>;
	status = "okay";
};

&pxp {
	status = "okay";
};

&sai1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai1>;
	fsl,mclk-out;
	status = "okay";
};

/* UART_C */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
#ifdef CONFIG_PICOCOM1_2_UART_C_RTSCTS
	fsl,uart-has-rtscts;
#endif
	status = "okay";
};

/* UART_B */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	fsl,uart-has-rtscts;
	status = "okay";
};

/* UART_A */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	fsl,uart-has-rtscts;
	status = "okay";
};

/* UART_D */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	fsl,uart-has-rtscts;
	status = "okay";
};

/* UART_E */
#ifndef CONFIG_PICOCOM1_2_SPI_B
&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	fsl,uart-has-rtscts;
	status = "okay";
};

#endif

&uart6 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart6>;
	fsl,uart-has-rtscts;
	status = "okay";
};

/* UART_F */
&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart7>;
	status = "okay";
};

&usbotg1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb_otg1>;
#ifdef CONFIG_PICOCOM1_2_OTG_HOST
	dr_mode = "host";
//###	vbus-supply = <&reg_usb_otg1_vbus>;
	pwr-active-high;
	disable-over-current;
#else
	dr_mode = "peripheral";
#endif
	status = "okay";
};

&usbotg2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb_otg2>;
//###	vbus-supply = <&reg_usb_otg2_vbus>;
	dr_mode = "host";
	pwr-active-high;
	disable-over-current;
	status = "okay";
};

#ifdef CONFIG_PICOCOM1_2_WLAN
/* on-board WLAN */
&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	bus-width = <4>;
	vmmc-supply = <&reg_vref_3v3>;
	non-removable;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	vqmmc-supply = <&reg_wlan_vmmc_1v8>;
	status = "okay";
};
#endif

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	bus-width = <4>;
#ifndef CONFIG_PICOCOM1_2_UART_C_RTSCTS
	cd-gpios = <&gpio1 19 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio1 18 0>;
else
	non-removable;
#endif
	no-1-8-v;
	status = "okay";
};

/* I2C_A: Feature Connector (SKIT) */
&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";
};

/* I2C_B: Feature Connector (SKIT) */
&i2c2 {
	clock_frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";
};

/* I2C_C (Bitbanging): RTC (PCA8565), SGTL5000 (SKIT) */
&i2c_gpio {
#ifdef CONFIG_PICOCOM1_2_SGTL5000
	sgtl5000: sgtl5000@0a {
		compatible = "fsl,sgtl5000";
		reg = <0x0a>;
		clocks = <&clks IMX6UL_CLK_SAI1>;
		mono2both;
		VDDA-supply = <&reg_sgtl5000_vdda>;
		VDDIO-supply = <&reg_sgtl5000_vddio>;
		VDDD-supply = <&reg_sgtl5000_vddd>;
	};
#endif
	rtc8565@51 {
		compatible = "nxp,pcf8565", "nxp,pcf8563";
		reg = <0x51>;
		interrupt-parent = <&gpio5>;
		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;
	};
};

#if defined(CONFIG_PICOCOM1_2_MQS) && !defined(CONFIG_PICOCOM1_2_SGTL5000)
&mqs {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_mqs>;
	clocks = <&clks IMX6UL_CLK_SAI1>;
	clock-names = "mclk";
	status = "okay";
};

&sdma {
	gpr = <&gpr>;
	fsl,sdma-event-remap = <0 15 1>, <0 16 1>;
};
#endif

/* SPI_A (3x CS) */
&ecspi1 {
	fsl,spi-num-chipselects = <3>;
	cs-gpios = <&gpio4 26 0>,
		   <&gpio3 10 0>,
		   <&gpio3 11 0>;

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1 &pinctrl_ecspi1_cs>;
	status = "okay";

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};
};

#ifdef CONFIG_PICOCOM1_2_SPI_B
/* SPI_B (1x CS) */
&ecspi2 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 22 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};
};
#endif

&dma_apbh {
	/* Switch to F&S implementation of APBH DMA driver for GPMI (NAND) */
	compatible = "fus,imx6ul-dma-apbh", "fus,imx28-dma-apbh";
	iram = <&ocram>;
};

#ifdef CONFIG_PICOCOM1_2_NAND
&gpmi {
	/* Switch to F&S implementation of GPMI NAND driver */
	compatible = "fus,imx6ul-gpmi-nand", "fus,imx6q-gpmi-nand";
	pinctrl-names = "default";
//###	pinctrl-0 = <&pinctrl_gpmi_nand_1>;
	fus,skipblocks = <2>;
	fus,chunk1k;
	fus,ecc_strength = <8>;
	status = "okay";
};
#endif

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog_1>;
	picocom1_2 {

		pinctrl_hog_1: hoggrp-1 {
				fsl,pins = <
/*###*/				MX6UL_PAD_JTAG_TMS__CCM_CLKO1		0x17088
				MX6UL_PAD_LCD_DATA00__SAI1_MCLK		0x17088
				//MX6UL_PAD_SNVS_TAMPER7__GPIO5_IO07	0x0b0b0
				/* GPIO1 - GPIO5 */
				MX6UL_PAD_LCD_DATA12__GPIO3_IO17	0x030b0
				MX6UL_PAD_LCD_DATA13__GPIO3_IO18	0x030b0
				MX6UL_PAD_LCD_DATA14__GPIO3_IO19	0x030b0
				MX6UL_PAD_LCD_DATA15__GPIO3_IO20	0x030b0
				MX6UL_PAD_LCD_DATA07__GPIO3_IO12	0x030b0
			>;

};

#ifdef CONFIG_PICOCOM1_2_ETH0
		pinctrl_enet1: enet1grp {
			fsl,pins = <
				/* MDIO */
				MX6UL_PAD_GPIO1_IO07__ENET1_MDC		0x1b0b0
				MX6UL_PAD_GPIO1_IO06__ENET1_MDIO	0x1b829

				/* FEC1 */
				MX6UL_PAD_ENET1_RX_EN__ENET1_RX_EN	0x1b0b0
				MX6UL_PAD_ENET1_RX_ER__ENET1_RX_ER	0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA1__ENET1_RDATA01	0x1b0b0
				MX6UL_PAD_ENET1_RX_DATA0__ENET1_RDATA00	0x1b0b0
				MX6UL_PAD_ENET1_TX_EN__ENET1_TX_EN	0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA1__ENET1_TDATA01	0x1b0b0
				MX6UL_PAD_ENET1_TX_DATA0__ENET1_TDATA00	0x1b0b0
				MX6UL_PAD_ENET1_TX_CLK__ENET1_REF_CLK1	0x4001b0b0

				/* phy reset */
				MX6UL_PAD_BOOT_MODE1__GPIO5_IO11	0x0b0b0
			>;
		};
#endif

		pinctrl_flexcan1: flexcan1grp{
			fsl,pins = <
				MX6UL_PAD_LCD_DATA08__FLEXCAN1_TX	0x1b020
				MX6UL_PAD_LCD_DATA09__FLEXCAN1_RX	0x1b020
			>;
		};

		pinctrl_flexcan2: flexcan2grp{
			fsl,pins = <
				MX6UL_PAD_LCD_DATA10__FLEXCAN2_TX	0x1b020
				MX6UL_PAD_LCD_DATA11__FLEXCAN2_RX	0x1b020
			>;
		};

#ifdef CONFIG_PICOCOM1_2_PWM
		pinctrl_pwm1: pwm1grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO08__PWM1_OUT		0x110b0
			>;
		};

		pinctrl_pwm2: pwm2grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO09__PWM2_OUT		0x110b0
			>;
		};

		pinctrl_pwm4: pwm4grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO05__PWM4_OUT		0x110b0
			>;
		};
#elif CONFIG_PICOCOM1_2_ADC
		pinctrl_adc1: adc1grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO05__GPIO1_IO05	0x000b0
				MX6UL_PAD_GPIO1_IO08__GPIO1_IO08	0x000b0
				MX6UL_PAD_GPIO1_IO09__GPIO1_IO09	0x000b0
			>;
		};
#endif

pinctrl_pwm3: pwm3grp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO04__PWM3_OUT		0x110b0
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6UL_PAD_UART1_TX_DATA__UART1_DCE_TX	0x1b0b1
				MX6UL_PAD_UART1_RX_DATA__UART1_DCE_RX	0x1b0b1

#ifdef CONFIG_PICOCOM1_2_UART_C_RTSCTS
				MX6UL_PAD_UART1_RTS_B__UART1_DTE_CTS	0x1b0b1
				MX6UL_PAD_UART1_CTS_B__UART1_DTE_RTS	0x1b0b1
#endif
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX6UL_PAD_UART2_TX_DATA__UART2_DCE_TX	0x1b0b1
				MX6UL_PAD_UART2_RX_DATA__UART2_DCE_RX	0x1b0b1
				MX6UL_PAD_UART2_RTS_B__UART2_DTE_CTS	0x1b0b1
				MX6UL_PAD_UART2_CTS_B__UART2_DTE_RTS	0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6UL_PAD_UART3_TX_DATA__UART3_DCE_TX	0x1b0b1
				MX6UL_PAD_UART3_RX_DATA__UART3_DCE_RX	0x1b0b1
				MX6UL_PAD_UART3_RTS_B__UART3_DTE_CTS	0x1b0b1
				MX6UL_PAD_UART3_CTS_B__UART3_DTE_RTS	0x1b0b1
			>;
		};

		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX6UL_PAD_LCD_CLK__UART4_DCE_TX		0x1b0b1
				MX6UL_PAD_LCD_ENABLE__UART4_DCE_RX	0x1b0b1
				MX6UL_PAD_LCD_HSYNC__UART4_DTE_RTS	0x1b0b1
				MX6UL_PAD_LCD_VSYNC__UART4_DTE_CTS	0x1b0b1
			>;
		};

		pinctrl_usb_otg1: usb_otg1grp {
			fsl,pins = <
				/* USB_OTG1_PWR, active high */
//###				MX6UL_PAD_ENET2_RX_DATA0__GPIO2_IO08	0x030b0
				MX6UL_PAD_ENET2_RX_DATA0__USB_OTG1_PWR	0x030b0
			>;
		};

		pinctrl_usb_otg2: usb_otg2grp {
			fsl,pins = <
				/* USB_OTG2_PWR, active high */
//###				MX6UL_PAD_ENET2_TX_DATA1__GPIO2_IO12	0x030b0
				MX6UL_PAD_ENET2_TX_DATA1__USB_OTG2_PWR	0x030b0
			>;
		};

#ifndef CONFIG_PICOCOM1_2_SPI_B
		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6UL_PAD_CSI_DATA00__UART5_DCE_TX	0x1b0b1
				MX6UL_PAD_CSI_DATA01__UART5_DCE_RX	0x1b0b1
				MX6UL_PAD_CSI_DATA02__UART5_DTE_CTS	0x1b0b1
				MX6UL_PAD_CSI_DATA03__UART5_DTE_RTS	0x1b0b1
			>;
		};
#endif

		pinctrl_uart6: uart6grp {
			fsl,pins = <
				MX6UL_PAD_CSI_MCLK__UART6_DCE_TX	0x1b0b1
				MX6UL_PAD_CSI_PIXCLK__UART6_DCE_RX	0x1b0b1
				MX6UL_PAD_CSI_VSYNC__UART6_DTE_CTS	0x1b0b1
				MX6UL_PAD_CSI_HSYNC__UART6_DTE_RTS	0x1b0b1
			>;
		};

		pinctrl_uart7: uart7grp {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA16__UART7_DCE_TX	0x1b0b1
				MX6UL_PAD_LCD_DATA17__UART7_DCE_RX	0x1b0b1
			>;
		};

#ifdef CONFIG_PICOCOM1_2_WLAN
		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x17059
				MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x10071
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x17059
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x17059
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x17059
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x17059
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x170b9
				MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x100b9
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x170b9
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x170b9
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x170b9
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x170b9
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
			fsl,pins = <
				MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x170f9
				MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x100f9
				MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x170f9
				MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x170f9
				MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x170f9
				MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x170f9
			>;
		};
#endif

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6UL_PAD_LCD_DATA19__USDHC2_CLK	0x10069
				MX6UL_PAD_LCD_DATA18__USDHC2_CMD	0x17059
				MX6UL_PAD_LCD_DATA20__USDHC2_DATA0	0x17059
				MX6UL_PAD_LCD_DATA21__USDHC2_DATA1	0x17059
				MX6UL_PAD_LCD_DATA22__USDHC2_DATA2	0x17059
				MX6UL_PAD_LCD_DATA23__USDHC2_DATA3	0x17059

#ifndef CONFIG_PICOCOM1_2_UART_C_RTSCTS
				/* SD_CD */
				MX6UL_PAD_UART1_RTS_B__GPIO1_IO19	0x17059
				/* SD_WP */
				MX6UL_PAD_UART1_CTS_B__GPIO1_IO18	0x13059
#endif
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX6UL_PAD_UART4_TX_DATA__I2C1_SCL	0x4001b8b0
				MX6UL_PAD_UART4_RX_DATA__I2C1_SDA	0x4001b8b0
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX6UL_PAD_UART5_TX_DATA__I2C2_SCL	0x4001b8b0
				MX6UL_PAD_UART5_RX_DATA__I2C2_SDA	0x4001b8b0
			>;
		};

		pinctrl_i2c_gpio: i2c_gpio_grp {
			fsl,pins = <
				MX6UL_PAD_SNVS_TAMPER9__GPIO5_IO09	0x4001b0b0
				MX6UL_PAD_SNVS_TAMPER8__GPIO5_IO08	0x4001b0b0
				MX6UL_PAD_SNVS_TAMPER7__GPIO5_IO07	0x4001b0b0
			>;
		};

		pinctrl_sai1: sai1grp {
			fsl,pins = <
				//MX6UL_PAD_LCD_DATA00__SAI1_MCLK	0x17088
				MX6UL_PAD_LCD_DATA01__SAI1_TX_SYNC	0x17088
				MX6UL_PAD_LCD_DATA02__SAI1_TX_BCLK	0x17088
				MX6UL_PAD_LCD_DATA03__SAI1_RX_DATA	0x17088
				MX6UL_PAD_LCD_DATA04__SAI1_TX_DATA	0x17088
			>;
		};

#if defined(CONFIG_PICOCOM1_2_MQS) && !defined(CONFIG_PICOCOM1_2_SGTL5000)
		pinctrl_mqs: mqsgrp {
			fsl,pins = <
				MX6UL_PAD_GPIO1_IO00__MQS_RIGHT		0x120b0
				MX6UL_PAD_GPIO1_IO01__MQS_LEFT		0x120b0
			>;
		};
#endif

		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				MX6UL_PAD_CSI_DATA04__ECSPI1_SCLK	0x100b1
				MX6UL_PAD_CSI_DATA06__ECSPI1_MOSI	0x100b1
				MX6UL_PAD_CSI_DATA07__ECSPI1_MISO	0x100b1
			>;
		};

		pinctrl_ecspi1_cs: ecspi1cs {
			fsl,pins = <
				MX6UL_PAD_CSI_DATA05__GPIO4_IO26	0x80000000
				MX6UL_PAD_LCD_DATA05__GPIO3_IO10	0x80000000
				MX6UL_PAD_LCD_DATA06__GPIO3_IO11	0x80000000
			>;
		};

		pinctrl_ecspi2: ecspi2grp {
			fsl,pins = <
				MX6UL_PAD_CSI_DATA00__ECSPI2_SCLK	0x100b1
				MX6UL_PAD_CSI_DATA01__GPIO4_IO22	0x80000000
				MX6UL_PAD_CSI_DATA02__ECSPI2_MOSI	0x100b1
				MX6UL_PAD_CSI_DATA03__ECSPI2_MISO	0x100b1
			>;
		};

#ifdef CONFIG_PICOCOM1_2_NAND
#if 0
		pinctrl_gpmi_nand_1: gpmi-nand-1 {
			/* Already configured in NBoot/U-Boot */
			fsl,pins = <
				MX6UL_PAD_NAND_CLE__RAWNAND_CLE		0x0b0b1
				MX6UL_PAD_NAND_ALE__RAWNAND_ALE		0x0b0b1
				MX6UL_PAD_NAND_WP_B__RAWNAND_WP_B	0x0b0b1
				MX6UL_PAD_NAND_READY_B__RAWNAND_READY_B	0x0b000
				MX6UL_PAD_NAND_CE0_B__RAWNAND_CE0_B	0x0b0b1
				//MX6UL_PAD_NAND_CE1_B__RAWNAND_CE1_B	0x0b0b1
				MX6UL_PAD_NAND_RE_B__RAWNAND_RE_B	0x0b0b1
				MX6UL_PAD_NAND_WE_B__RAWNAND_WE_B	0x0b0b1
				MX6UL_PAD_NAND_DATA00__RAWNAND_DATA00	0x0b0b1
				MX6UL_PAD_NAND_DATA01__RAWNAND_DATA01	0x0b0b1
				MX6UL_PAD_NAND_DATA02__RAWNAND_DATA02	0x0b0b1
				MX6UL_PAD_NAND_DATA03__RAWNAND_DATA03	0x0b0b1
				MX6UL_PAD_NAND_DATA04__RAWNAND_DATA04	0x0b0b1
				MX6UL_PAD_NAND_DATA05__RAWNAND_DATA05	0x0b0b1
				MX6UL_PAD_NAND_DATA06__RAWNAND_DATA06	0x0b0b1
				MX6UL_PAD_NAND_DATA07__RAWNAND_DATA07	0x0b0b1
			>;
		};
#endif
#endif

		pinctrl_status_leds: ledgrp {
			fsl,pins = <
				MX6UL_PAD_SNVS_TAMPER0__GPIO5_IO00	0x030b0
				MX6UL_PAD_SNVS_TAMPER1__GPIO5_IO01	0x030b0
			>;
		};
	};
};