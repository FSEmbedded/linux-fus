/*
 * Copyright (C) 2017 F&S Elektronik Systeme GmbH
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

/* Set board revision as 3-digit number, e.g. 100 for board rev. 1.00 */
#define CONFIG_CONT1_BOARD_REVISION	100

/* CMA: Set 320 MB for Continuous Memory Allocator */
#define CONFIG_CONT1_CMA_SIZE 0x14000000

/* Network */
#define CONFIG_CONT1_ETH0
#define CONFIG_CONT1_ETH1

/* I2C */
#define CONFIG_CONT1_I2C_A
#define CONFIG_CONT1_I2C_B
#define CONFIG_CONT1_I2C_C
#define CONFIG_CONT1_I2C_D

/* SPI */
#define CONFIG_CONT1_SPI_A
#define CONFIG_CONT1_SPI_B
#define CONFIG_CONT1_SPI_C
#define CONFIG_CONT1_SPI_D

#include "imx6sx.dtsi"

/ {
	model = "F&S CONT1";
	compatible = "fus,imx6sx-CONT1", "fsl,imx6sx";

	clocks {
		codec_osc: anaclk2 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <24576000>;
		};
	};

	memory {
		reg = <0x80000000 0x80000000>;
	};

	pxp_v4l2_out {
		compatible = "fsl,imx6sx-pxp-v4l2", "fsl,imx6sl-pxp-v4l2";
		status = "okay";
	};

	regulators {
		compatible = "simple-bus";

		reg_can: regulator_can {
			compatible = "regulator-fixed";
			regulator-name = "can";
		};

		reg_vref_3v3: regulator@0 {
			compatible = "regulator-fixed";
			regulator-name = "vref-3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		/* USB_OTG1_PWR is always on, no regulator needed */
#if 0 //###
		reg_usb_otg1_vbus: usb_otg1_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb_otg1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
		};
#endif

		/* USB_OTG2_PWR is always on, no regulator needed */
#if 0 //###
		reg_usb_otg2_vbus: usb_otg2_vbus {
			compatible = "regulator-fixed";
			regulator-name = "usb_otg2_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			regulator-always-on;
		};
#endif //###
	};

	/* F&S board information */
	bdinfo {
		compatible = "bdinfo";
		board_name = "cont1";
		ecc_strength = "8";
	};

	/* F&S auxiliary core driver */
	auxiliary_core {
		compatible = "auxiliary-core";
		clocks = <&clks IMX6SX_CLK_M4>;
	};
};

/* RAM size for Continues Memory Allocator */
&cma {
	size = <CONFIG_CONT1_CMA_SIZE>;
};

&busfreq {
	/* Disable bus frequency scaling, because reducing bus frequency to
	   24 MHz does not work with all types of DDR3 RAM */
	disable-scaling;
};

&clks {
	/* Shared memory in OCRAM, keep clear from Linux */
	fsl,shared-mem-addr = <0x91F000>;
	fsl,shared-mem-size = <0x1000>;
	fsl,shared-clks-number = <0x23>;
	fsl,shared-clks-index = <IMX6SX_CLK_PLL2_BUS
				 IMX6SX_CLK_PLL2_PFD0
				 IMX6SX_CLK_PLL2_PFD2
				 IMX6SX_CLK_PLL3_USB_OTG
				 IMX6SX_CLK_PLL3_PFD1
				 IMX6SX_CLK_PLL3_PFD2
				 IMX6SX_CLK_PLL3_PFD3
				 IMX6SX_CLK_PLL4_AUDIO
				 IMX6SX_CLK_PLL5_VIDEO
				 IMX6SX_CLK_OCRAM
				 IMX6SX_CLK_CAN1_SERIAL
				 IMX6SX_CLK_CAN1_IPG
				 IMX6SX_CLK_CAN2_SERIAL
				 IMX6SX_CLK_CAN2_IPG
				 IMX6SX_CLK_CANFD
				 IMX6SX_CLK_ECSPI1
				 IMX6SX_CLK_ECSPI2
				 IMX6SX_CLK_ECSPI3
				 IMX6SX_CLK_ECSPI4
				 IMX6SX_CLK_ECSPI5
				 IMX6SX_CLK_QSPI1
				 IMX6SX_CLK_QSPI2
				 IMX6SX_CLK_SSI1
				 IMX6SX_CLK_SSI2
				 IMX6SX_CLK_SSI3
				 IMX6SX_CLK_UART_SERIAL
				 IMX6SX_CLK_UART_IPG
				 IMX6SX_CLK_PERIPH_CLK2_SEL
				 IMX6SX_CLK_DUMMY
				 IMX6SX_CLK_I2C1
				 IMX6SX_CLK_I2C2
				 IMX6SX_CLK_I2C3
				 IMX6SX_CLK_I2C4
				 IMX6SX_CLK_EPIT1
				 IMX6SX_CLK_EPIT2>;
};

/* epit1 and epit2 may be used by Cortex-M4 examples for timing purposes; they are
   not used in Linux anyway */
&epit1{
	status = "disabled";
};

&epit2{
	status = "disabled";
};

/* rpmsg is used for communication between Cortex-A9 and Cortex-M4 cores */
&rpmsg{
	/* The ring buffer addresses are automatically updated in current U-Boot */
	vring-buffer-address0 = <0xBFFF0000>;
	vring-buffer-address1 = <0xBFFF8000>;
	status = "okay";
};

/*
 * OCRAM usage (128KB):
 *   0x00900000 - 0x00900FFF: Cortex-A9/Linux: CPU idle + bus frequency code
 *   0x00901000 - 0x0090FFFF: Cortex-A9/Linux: DMA descriptors, GPU
 *   0x00910000 - 0x0091EFFF: Cortex-M4/FreeRTOS: Code/Data
 *   0x0091F000 - 0x0091FFFF: Cortex-A9+M4: Shared memory for shared clocks
 */
&ocram {
	reg = <0x00901000 0xf000>;
};

&dma_apbh {
	/* Switch to F&S implementation of APBH DMA driver for GPMI (NAND) */
	compatible = "fus,imx6sx-dma-apbh", "fus,imx28-dma-apbh";
	iram = <&ocram>;
};

&gpmi {
	/* Switch to F&S implementation of GPMI NAND driver */
	compatible = "fus,imx6sx-gpmi-nand";
	pinctrl-names = "default";
//###	pinctrl-0 = <&pinctrl_gpmi_nand_1>;
	fus,skipblocks = <2>;
	fus,chunk1k;
	fus,ecc_strength = <8>;		/* Spare area 64 bytes */
	status = "okay";
};

#ifdef CONFIG_CONT1_SPI_A
&ecspi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	fsl,spi-num-chipselects = <4>;
	cs-gpios = <&gpio2 16 0>, <&gpio2 18 0>, <&gpio2 13 0>, <&gpio2 17 0>;
	status = "okay";

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};

	spidev@1 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <1>;
	};

	spidev@2 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <2>;
	};

	spidev@3 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <3>;
	};
};
#endif

#ifdef CONFIG_CONT1_SPI_B
&ecspi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	fsl,spi-num-chipselects = <4>;
	cs-gpios = <&gpio6 14 0>, <&gpio7 2 0>, <&gpio7 3 0>, <&gpio6 16 0>;
	status = "okay";

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};

	spidev@1 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <1>;
	};

	spidev@2 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <2>;
	};

	spidev@3 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <3>;
	};
};
#endif

#ifdef CONFIG_CONT1_SPI_C
&ecspi4 {
	/* SPI_A: 5x CS */
	fsl,spi-num-chipselects = <5>;
	cs-gpios = <&gpio7 4 0>, <&gpio3 1 0>, <&gpio3 2 0>,
		   <&gpio3 3 0>, <&gpio3 4 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi4>;
	status = "okay";

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};

	spidev@1 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <1>;
	};

	spidev@2 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <2>;
	};

	spidev@3 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <3>;
	};

	spidev@4 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <4>;
	};
};
#endif

#ifdef CONFIG_CONT1_SPI_D
&ecspi5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi5>;
	/* SPI_A: 4x CS */
	fsl,spi-num-chipselects = <4>;
	cs-gpios = <&gpio4 28 0>, <&gpio4 18 0>, <&gpio4 19 0>, <&gpio4 27 0>;
	status = "okay";

	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};

	spidev@1 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <1>;
	};

	spidev@2 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <2>;
	};

	spidev@3 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <3>;
	};
};
#endif

#ifdef CONFIG_CONT1_ETH0
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1_1>;
	phy-mode = "rgmii";
	fsl,magic-packet;
	status = "okay";

	/* FEC1 is directly connected to ethernet switch SJA1105 port 3 */
	fixed-link {
		speed = <1000>;
		full-duplex;
	};

#if 0
	/* ### TODO ### */
	/* There are three external PHYs on MDIO bus of FEC1. Ports 0 and 1
	   are available as RJ45 connectors and port 2 is on the B2B connector.
	   However these PHYs have nothing to do with the connection of FEC1
	   and FEC2 to the switch, so they can not simply be added here. They
	   need a separate driver to handle link changes, for example to update
	   the speed of the switch port. As long as the ports can use a fixed
	   speed, the U-Boot configuration is sufficient and no further action
	   is required in Linux. */
	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@4 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
		};
		ethphy1: ethernet-phy@5 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <5>;
		};
		ethphy2: ethernet-phy@6 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <6>;
		};
	};
#endif
};
#endif /* CONFIG_CONT1_ETH0 */

#ifdef CONFIG_CONT1_ETH1
&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2_1>;
	phy-mode = "rgmii";
	fsl,magic-packet;
	status = "okay";

	/* FEC2 is directly connected to ethernet switch SJA1105 port 4 */
	fixed-link {
		speed = <1000>;
		full-duplex;
	};
};
#endif /* CONFIG_CONT1_ETH1 */

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1_1>;
	xceiver-supply = <&reg_can>;
//###	trx-en-gpio = <&max7310_b 5 GPIO_ACTIVE_HIGH>;
//###	trx-stby-gpio = <&max7310_b 4 GPIO_ACTIVE_HIGH>;
//###	trx-wakeup-gpio = <&max7310_b 7 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2_1>;
	xceiver-supply = <&reg_can>;
//###	trx-en-gpio = <&max7310_b 5 GPIO_ACTIVE_HIGH>;
//###	trx-stby-gpio = <&max7310_b 4 GPIO_ACTIVE_HIGH>;
//###	trx-wakeup-gpio = <&max7310_b 7 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

/* This board uses CPU variant MCIMX6X2EVN10 which does not have a GPU */
&gpu {
	status = "disabled";
};

#ifdef CONFIG_CONT1_I2C_C
/* I2C_C RTC, B2B Connector */
&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1_1>;
	status = "okay";

	rtc8565@51 {
		compatible = "nxp,pcf8565", "nxp,pcf8563";
		reg = <0x51>;
	};
};
#endif

#ifdef CONFIG_CONT1_I2C_A
/* I2C_A B2B Connector */
&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2_1>;
	status = "okay";
};
#endif

#ifdef CONFIG_CONT1_I2C_B
/* I2C_B: B2B Connector */
&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3_1>;
	status = "okay";
};
#endif

#ifdef CONFIG_CONT1_I2C_D
/* I2C_D: B2B Connector */
&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4_1>;
	status = "okay";
};
#endif

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "okay";
};

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm3>;
	status = "okay";
};

&pwm4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm4>;
	status = "okay";
};

/* UART_A: TXD, RXD only, RS232-level */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1_1>;
	status = "okay";
};

/* UART_B: TXD, RXD, RTS, RS485-level */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3_1>;
	fsl,uart-has-rtscts;
	status = "disabled";		/* Used on Cortex-M4 */
};

/* UART_C: TXD, RXD, RTS, CTS, TTL-level on B2B connector */
&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5_1>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&usbotg1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg1>;
//###	vbus-supply = <&reg_usb_otg1_vbus>;
	disable-over-current;
	status = "okay";
};

&usbotg2 {
//###	vbus-supply = <&reg_usb_otg2_vbus>;
	dr_mode = "host";
	disable-over-current;
	status = "okay";
};

&usdhc2 {
	/* Micro-SD slot on CONT1 */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2_1>;
	cd-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
	//wp-gpios = <&gpio1 7 GPIO_ACTIVE_HIGH>; /* not connected */
	bus-width = <4>;
	vmmc-supply = <&reg_vref_3v3>;	/* VDD */
	vqmmc-supply = <&reg_vref_3v3>;	/* VDD_IO */
	voltage-ranges = <3300 3300>;
	no-1-8-v;
	keep-power-in-suspend;
	status = "okay";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	CONT1 {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				/* I2C1_RST */
				MX6SX_PAD_GPIO1_IO02__GPIO1_IO_2	0x0b0b0
				/* I2C1_IRQ */
				MX6SX_PAD_GPIO1_IO03__GPIO1_IO_3	0x0b0b0
				/* I2C2_RST */
				MX6SX_PAD_SD4_RESET_B__GPIO6_IO_22	0x0b0b0
				/* I2C2_IRQ */
				MX6SX_PAD_QSPI1A_DATA0__GPIO4_IO_16	0x0b0b0
				/* I2c3_RST */
				MX6SX_PAD_QSPI1A_SS0_B__GPIO4_IO_22	0x0b0b0
				/* I2c3_IRQ */
				MX6SX_PAD_QSPI1A_SCLK__GPIO4_IO_21	0x0b0b0
				/* I2C4_RST */
				MX6SX_PAD_LCD1_DATA04__GPIO3_IO_5	0x0b0b0
				/* I2C4_IRQ */
				MX6SX_PAD_LCD1_DATA05__GPIO3_IO_6	0x0b0b0
				/* GPIOs 0 - 3 */
				MX6SX_PAD_LCD1_DATA06__GPIO3_IO_7	0x030b0
				MX6SX_PAD_LCD1_DATA07__GPIO3_IO_8	0x030b0
				MX6SX_PAD_LCD1_DATA08__GPIO3_IO_9	0x030b0
				MX6SX_PAD_LCD1_DATA09__GPIO3_IO_10	0x030b0
				/* SJA1105 */
				/* SJA1105 RST */
				MX6SX_PAD_LCD1_ENABLE__GPIO3_IO_25	0x0b0b0
				/* PHY_RST1 */
				MX6SX_PAD_LCD1_DATA10__GPIO3_IO_11	0x0b0b0
				/* PHY_INT1 */
				MX6SX_PAD_LCD1_DATA11__GPIO3_IO_12	0x0b0b0
				/* PHY_RST2 */
				MX6SX_PAD_LCD1_DATA12__GPIO3_IO_13	0x0b0b0
				/* PHY_INT2 */
				MX6SX_PAD_LCD1_DATA13__GPIO3_IO_14	0x0b0b0
				/* PHY_RST3 */
				MX6SX_PAD_LCD1_DATA14__GPIO3_IO_15	0x0b0b0
				/* PHY_INT3 */
				MX6SX_PAD_LCD1_DATA15__GPIO3_IO_16	0x0b0b0
			>;
		};

#ifdef CONFIG_CONT1_SPI_A
		pinctrl_ecspi1: ecspi1grp_1 {
			fsl,pins = <
				MX6SX_PAD_KEY_COL0__ECSPI1_SCLK		0x100b1
				MX6SX_PAD_KEY_ROW0__ECSPI1_MOSI		0x100b1
				MX6SX_PAD_KEY_COL1__ECSPI1_MISO		0x100b1
				/* CS0 - CS3 */
				MX6SX_PAD_KEY_ROW1__GPIO2_IO_16		0x1b0b0
				MX6SX_PAD_KEY_ROW3__GPIO2_IO_18		0x1b0b0
				MX6SX_PAD_KEY_COL3__GPIO2_IO_13		0x1b0b0
				MX6SX_PAD_KEY_ROW2__GPIO2_IO_17		0x1b0b0
			>;
		};
#endif

#ifdef CONFIG_CONT1_SPI_B
		pinctrl_ecspi2: ecspi2grp_1 {
			fsl,pins = <
				MX6SX_PAD_SD4_DATA1__ECSPI2_SCLK	0x100b1
				MX6SX_PAD_SD4_CMD__ECSPI2_MOSI		0x100b1
				MX6SX_PAD_SD4_CLK__ECSPI2_MISO		0x100b1
				/* CS0 - CS3 */
				MX6SX_PAD_SD4_DATA0__GPIO6_IO_14	0x1b0b0
				MX6SX_PAD_SD3_DATA0__GPIO7_IO_2		0x1b0b0
				MX6SX_PAD_SD3_DATA1__GPIO7_IO_3		0x1b0b0
				MX6SX_PAD_SD4_DATA2__GPIO6_IO_16	0x1b0b0
			>;
		};
#endif

#ifdef CONFIG_CONT1_SPI_C
		pinctrl_ecspi4: ecspi4grp_1 {
			fsl,pins = <
				MX6SX_PAD_SD3_CLK__ECSPI4_SCLK		0x100b1
				MX6SX_PAD_SD3_CMD__ECSPI4_MOSI		0x100b1
				MX6SX_PAD_SD3_DATA3__ECSPI4_MISO	0x100b1
				/* CS0 - CS4 */
				MX6SX_PAD_SD3_DATA2__GPIO7_IO_4		0x1b0b0
				MX6SX_PAD_LCD1_DATA00__GPIO3_IO_1	0x1b0b0
				MX6SX_PAD_LCD1_DATA01__GPIO3_IO_2	0x1b0b0
				MX6SX_PAD_LCD1_DATA02__GPIO3_IO_3	0x1b0b0
				MX6SX_PAD_LCD1_DATA03__GPIO3_IO_4	0x1b0b1
			>;
		};
#endif

#ifdef CONFIG_CONT1_SPI_D
		pinctrl_ecspi5: ecspi5grp_1 {
			fsl,pins = <
				MX6SX_PAD_QSPI1B_SS1_B__ECSPI5_SCLK	0x100b1
				MX6SX_PAD_QSPI1A_DQS__ECSPI5_MOSI	0x100b1
				MX6SX_PAD_QSPI1A_SS1_B__ECSPI5_MISO	0x100b1
				/* CS0 - CS3 */
				MX6SX_PAD_QSPI1B_DQS__GPIO4_IO_28	0x1b0b0
				MX6SX_PAD_QSPI1A_DATA2__GPIO4_IO_18	0x1b0b0
				MX6SX_PAD_QSPI1A_DATA3__GPIO4_IO_19	0x1b0b0
				MX6SX_PAD_QSPI1B_DATA3__GPIO4_IO_27	0x1b0b0
			>;
		};
#endif

#ifdef CONFIG_CONT1_ETH0
		pinctrl_enet1_1: enet1grp-1 {
			fsl,pins = <
				/* MDIO */
				MX6SX_PAD_ENET1_MDIO__ENET1_MDIO	0x0a0b1
				MX6SX_PAD_ENET1_MDC__ENET1_MDC		0x0a0b1

				/* FEC1 */
				MX6SX_PAD_RGMII1_TXC__ENET1_RGMII_TXC	0x0a0b9
				MX6SX_PAD_RGMII1_TD0__ENET1_TX_DATA_0	0x0a0b1
				MX6SX_PAD_RGMII1_TD1__ENET1_TX_DATA_1	0x0a0b1
				MX6SX_PAD_RGMII1_TD2__ENET1_TX_DATA_2	0x0a0b1
				MX6SX_PAD_RGMII1_TD3__ENET1_TX_DATA_3	0x0a0b1
				MX6SX_PAD_RGMII1_TX_CTL__ENET1_TX_EN	0x0a0b1
				MX6SX_PAD_RGMII1_RXC__ENET1_RX_CLK	0x03081
				MX6SX_PAD_RGMII1_RD0__ENET1_RX_DATA_0	0x03081
				MX6SX_PAD_RGMII1_RD1__ENET1_RX_DATA_1	0x03081
				MX6SX_PAD_RGMII1_RD2__ENET1_RX_DATA_2	0x03081
				MX6SX_PAD_RGMII1_RD3__ENET1_RX_DATA_3	0x03081
				MX6SX_PAD_RGMII1_RX_CTL__ENET1_RX_EN	0x03081
			>;
		};
#endif

#ifdef CONFIG_CONT1_ETH1
		pinctrl_enet2_1: enet2grp-1 {
			fsl,pins = <
				/* FEC2 uses MDIO bus from FEC1 */
				MX6SX_PAD_RGMII2_TXC__ENET2_RGMII_TXC	0x0a0b9
				MX6SX_PAD_RGMII2_TD0__ENET2_TX_DATA_0	0x0a0b1
				MX6SX_PAD_RGMII2_TD1__ENET2_TX_DATA_1	0x0a0b1
				MX6SX_PAD_RGMII2_TD2__ENET2_TX_DATA_2	0x0a0b1
				MX6SX_PAD_RGMII2_TD3__ENET2_TX_DATA_3	0x0a0b1
				MX6SX_PAD_RGMII2_TX_CTL__ENET2_TX_EN	0x0a0b1
				MX6SX_PAD_RGMII2_RXC__ENET2_RX_CLK	0x03081
				MX6SX_PAD_RGMII2_RD0__ENET2_RX_DATA_0	0x03081
				MX6SX_PAD_RGMII2_RD1__ENET2_RX_DATA_1	0x03081
				MX6SX_PAD_RGMII2_RD2__ENET2_RX_DATA_2	0x03081
				MX6SX_PAD_RGMII2_RD3__ENET2_RX_DATA_3	0x03081
				MX6SX_PAD_RGMII2_RX_CTL__ENET2_RX_EN	0x03081
			>;
		};
#endif

		pinctrl_flexcan1_1: flexcan1grp-1 {
			fsl,pins = <
				MX6SX_PAD_SD3_DATA5__CAN1_TX		0x1b020
				MX6SX_PAD_SD3_DATA7__CAN1_RX		0x1b020
			>;
		};

		pinctrl_flexcan2_1: flexcan2grp-1 {
			fsl,pins = <
				MX6SX_PAD_SD3_DATA6__CAN2_TX		0x1b020
				MX6SX_PAD_SD3_DATA4__CAN2_RX		0x1b020
			>;
		};

#if 0
		pinctrl_gpmi_nand_1: gpmi-nand-1 {
			/* Already configured in NBoot/U-Boot */
			fsl,pins = <
				MX6SX_PAD_NAND_CLE__RAWNAND_CLE		0x0b0b1
				MX6SX_PAD_NAND_ALE__RAWNAND_ALE		0x0b0b1
				MX6SX_PAD_NAND_WP_B__RAWNAND_WP_B	0x0b0b1
				MX6SX_PAD_NAND_READY_B__RAWNAND_READY_B	0x0b000
				MX6SX_PAD_NAND_CE0_B__RAWNAND_CE0_B	0x0b0b1
				//MX6SX_PAD_NAND_CE1_B__RAWNAND_CE1_B	0x0b0b1
				MX6SX_PAD_NAND_RE_B__RAWNAND_RE_B	0x0b0b1
				MX6SX_PAD_NAND_WE_B__RAWNAND_WE_B	0x0b0b1
				MX6SX_PAD_NAND_DATA00__RAWNAND_DATA00	0x0b0b1
				MX6SX_PAD_NAND_DATA01__RAWNAND_DATA01	0x0b0b1
				MX6SX_PAD_NAND_DATA02__RAWNAND_DATA02	0x0b0b1
				MX6SX_PAD_NAND_DATA03__RAWNAND_DATA03	0x0b0b1
				MX6SX_PAD_NAND_DATA04__RAWNAND_DATA04	0x0b0b1
				MX6SX_PAD_NAND_DATA05__RAWNAND_DATA05	0x0b0b1
				MX6SX_PAD_NAND_DATA06__RAWNAND_DATA06	0x0b0b1
				MX6SX_PAD_NAND_DATA07__RAWNAND_DATA07	0x0b0b1
			>;
		};
#endif

#ifdef CONFIG_CONT1_I2C_C
		/* I2C_C: RTC (PCA8565), B2B connector */
		pinctrl_i2c1_1: i2c1grp-1 {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO01__I2C1_SDA		0x4001b8b1
				MX6SX_PAD_GPIO1_IO00__I2C1_SCL		0x4001b8b1
			>;
		};
#endif

#ifdef CONFIG_CONT1_I2C_A
		/* I2C_A: B2B connector */
		pinctrl_i2c2_1: i2c2grp-1 {
			fsl,pins = <
				MX6SX_PAD_QSPI1B_DATA2__I2C2_SDA	0x4001b8b1
				MX6SX_PAD_SD4_DATA3__I2C2_SCL		0x4001b8b1
			>;
		};
#endif

#ifdef CONFIG_CONT1_I2C_B
		/* I2C_B: B2B Connector */
		pinctrl_i2c3_1: i2c3grp-1 {
			fsl,pins = <
				MX6SX_PAD_KEY_ROW4__I2C3_SDA		0x4001b8b1
				MX6SX_PAD_KEY_COL4__I2C3_SCL		0x4001b8b1
			>;
		};
#endif

#ifdef CONFIG_CONT1_I2C_D
		/* I2C_D: B2B Connector */
		pinctrl_i2c4_1: i2c4grp-1 {
			fsl,pins = <
				MX6SX_PAD_USB_H_DATA__I2C4_SDA		0x4001b8b1
				MX6SX_PAD_USB_H_STROBE__I2C4_SCL	0x4001b8b1
			>;
		};
#endif

		pinctrl_pwm1: pwm1grp-0 {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO10__PWM1_OUT		0x110b0
			>;
		};

		pinctrl_pwm2: pwm2grp-0 {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO11__PWM2_OUT		0x110b0
			>;
		};

		pinctrl_pwm3: pwm3grp-0 {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO12__PWM3_OUT		0x110b0
			>;
		};

		pinctrl_pwm4: pwm4grp-0 {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO13__PWM4_OUT		0x110b0
			>;
		};

		pinctrl_uart1_1: uart1grp-1 {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO04__UART1_TX		0x1b0b1
				MX6SX_PAD_GPIO1_IO05__UART1_RX		0x1b0b1
			>;
		};

		pinctrl_uart3_1: uart3grp-1 {
			fsl,pins = <
				MX6SX_PAD_QSPI1B_SS0_B__UART3_TX	0x1b0b1
				MX6SX_PAD_QSPI1B_SCLK__UART3_RX		0x1b0b1
				MX6SX_PAD_QSPI1B_DATA0__UART3_CTS_B	0x1b0b1
			>;
		};

		pinctrl_uart5_1: uart5grp-1 {
			fsl,pins = <
				MX6SX_PAD_SD4_DATA4__UART5_RX		0x1b0b1
				MX6SX_PAD_SD4_DATA5__UART5_TX		0x1b0b1
				MX6SX_PAD_SD4_DATA6__UART5_RTS_B	0x1b0b1
				MX6SX_PAD_SD4_DATA7__UART5_CTS_B	0x1b0b1
			>;
		};

		pinctrl_usbotg1: usbotg1grp {
			fsl,pins = <
				/* USB_OTG1_ID: low: host, open: device */
				MX6SX_PAD_QSPI1A_DATA1__ANATOP_OTG1_ID	0x1b000
			>;
		};

		/* Micro-SD slot on CONT1 */
		pinctrl_usdhc2_1: usdhc2grp-1 {
			fsl,pins = <
				MX6SX_PAD_SD2_CMD__USDHC2_CMD		0x17071
				MX6SX_PAD_SD2_CLK__USDHC2_CLK		0x10071
				MX6SX_PAD_SD2_DATA0__USDHC2_DATA0	0x17071
				MX6SX_PAD_SD2_DATA1__USDHC2_DATA1	0x17071
				MX6SX_PAD_SD2_DATA2__USDHC2_DATA2	0x17071
				MX6SX_PAD_SD2_DATA3__USDHC2_DATA3	0x17071
				/* Card Detect (CD), active low (pull-up) */
				MX6SX_PAD_GPIO1_IO06__GPIO1_IO_6	0x17000
				/*
				 * Write Protect (WP), active high (pull-up)
				 * lock:   WP switch open, pulled high
				 * unlock: WP switch closed, connects to GND
				 */
				MX6SX_PAD_GPIO1_IO07__GPIO1_IO_7	0x17000
			>;
		};
	};
};
