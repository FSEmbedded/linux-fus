/*
 * Copyright (C) 2016-2019 F&S Elektronik Systeme GmbH
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

/* Set board revision as 3-digit number, e.g. 110 for board rev. 1.10 */
#define CONFIG_VC600_BOARD_REVISION	120

/* CMA: Set 320 MB for Continuous Memory Allocator */
#define CONFIG_VC600_CMA_SIZE 0x14000000

/* EMMC - SD_B - Internal SD port */
#define CONFIG_VC600_EMMC

/* Network */
#define CONFIG_VC600_ETH0
#define CONFIG_VC600_ETH1

/* USB */
#define CONFIG_VC600_USB_OTG1
#define CONFIG_VC600_USB_HOST

/* I2C */
#define CONFIG_VC600_I2C_A
#define CONFIG_VC600_I2C_C

/* GPU is only available on CPU variants MCIMX6X3... and MCIMX6X4... */
//#define CONFIG_VC600_GPU

/* UART */
#define CONFIG_VC600_UART_A
#define CONFIG_VC600_UART_C
#define CONFIG_VC600_UART_C_RTSCTS

/* Check for invalid CONFIG combinations */

/* If UART_C is not used, also RTS/CTS may not be used */
#ifndef CONFIG_VC600_UART_C
#undef CONFIG_VC600_UART_C_RTSCTS
#endif


#include "imx6sx.dtsi"
#include <dt-bindings/rtc/nxp,pcf85263.h>

/ {
	model = "VISUCONNECT 600";
	compatible = "fus,imx6sx-picocoremx6sx", "fsl,imx6sx";

 	aliases {
 		nand = &gpmi;
 		emmc = &usdhc2;
		rpmsg = &rpmsg;
		gpc = &gpc;
		gpu3d = &gpu3d;
 	};


	clocks {
		codec_osc: anaclk2 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <24576000>;
		};
	};

	memory {
		reg = <0x80000000 0x80000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_vref_3v3: regulator@0 {
			compatible = "regulator-fixed";
			regulator-name = "vref-3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
	};

	/* F&S board information */
	bdinfo {
		compatible = "bdinfo";
		board_name = "VISUCONNECT 600";
		ecc_strength = "8";
	};

	gpioleds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_led>;

		led0 {
			label = "Power_good";
			gpios = <&gpio4 27 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		led1 {
			label = "LAN_0_Link";
			gpios = <&gpio4 26 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		led2 {
			label = "LAN_1_Link";
			gpios = <&gpio4 25 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		led3 {
			label = "Error";
			gpios = <&gpio4 24 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		/* Test pins must be set to high, if not the LEDs light up
		 * slightly
		 */
		led0_test {
			label = "Power_good-test";
			gpios = <&gpio4 22 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		led1_test {
			label = "LAN_0_Link-test";
			gpios = <&gpio4 21 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		led2_test {
			label = "LAN_1_Link-test";
			gpios = <&gpio4 19 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		led3_test {
			label = "Error-test";
			gpios = <&gpio4 18 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	};
};

/* RAM size for Continues Memory Allocator */
&cma {
	size = <CONFIG_VC600_CMA_SIZE>;
};

&busfreq {
	/* Disable bus frequency scaling, because reducing bus frequency to
	   24 MHz does not work with all types of DDR3 RAM */
	disable-scaling;
};

#ifdef CONFIG_VC600_ETH0
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	phy-supply = <&reg_vref_3v3>;
	fsl,magic-packet;
	status = "okay";

	/* The MDIO bus on FEC1 holds both PHYs */
	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@4 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
		};

#ifdef CONFIG_VC600_ETH1
		ethphy1: ethernet-phy@5 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <5>;
		};
#endif
	};
};
#endif /* CONFIG_VC600_ETH0 */

#ifdef CONFIG_VC600_ETH1
&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy1>;
	fsl,magic-packet;
	status = "okay";
};
#endif /* CONFIG_VC600_ETH1 */

#ifdef CONFIG_VC600_I2C_A
/*
 * I2C_A implemented via I2C4; used for ADS1015IDG
 */
&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";

	ads1015@48 {
	    compatible = "ads1015";
	    reg = <0x48>;
	    #address-cells = <1>;
	    #size-cells = <0>;

		channel@4 {
			reg = <4>;
			ti,gain = <1>;
			ti,datarate = <0>;
		};

		channel@5 {
			reg = <5>;
			ti,gain = <1>;
			ti,datarate = <0>;
		};

		channel@6 {
			reg = <6>;
			ti,gain = <1>;
			ti,datarate = <0>;
		};
    };

	rtcpcf85263@51 {
		compatible = "nxp,pcf85263";
		reg = <0x51>;
		/* IRQ is not connected */
		//interrupt-parent = <&gpio4>;
		//interrupts = <5 IRQ_TYPE_LEVEL_LOW>;
		//interrupt-names = "INTB";

		quartz-load-capacitance = <PCF85263_QUARTZCAP_12p5pF>;
		quartz-drive-strength = <PCF85263_QUARTZDRIVE_LOW>;
	};
};
#endif /* CONFIG_VC600_I2C_A */

#ifdef CONFIG_VC600_I2C_C
/*
 * I2C_C implemented via I2C1; used for on-board RTC, on-board LVDS connector;
 * On picocore bb: Audio Codec (SGTL5000), HDMI
 */
&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	rtc85063@51 {
		compatible = "nxp,pcf85063";
		reg = <0x51>;
		quartz-load-femtofarads = <12500>;
	};

};
#endif /* CONFIG_VC600_I2C_C */

#ifndef CONFIG_VC600_GPU
&gpu {
	status = "disabled";
};
#endif /* CONFIG_VC600_GPU */

#ifdef CONFIG_VC600_UART_A
/* UART_A implemented by UART1: TXD, RXD only */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};
#endif /* CONFIG_VC600_UART_A */

#ifdef CONFIG_VC600_UART_C
/* UART_C implemented by UART4: TXD, RXD,  RTS, CTS */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
#ifdef CONFIG_VC600_UART_C_RTSCTS
	uart-has-rtscts;
#endif
	status = "okay";
};
#endif /* CONFIG_VC600_UART_C */

#ifdef CONFIG_VC600_USB_OTG1
&usbotg1 {
	dr_mode = "peripheral";
	status = "okay";
};
#endif

#ifdef CONFIG_VC600_USB_HOST
&usbotg2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg2>;
	dr_mode = "host";
	power-active-high;
	over-current-active-low;
	status = "okay";
};
#endif

#ifdef CONFIG_VC600_EMMC
/* EMMC implemented via USDHC2 */
&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2_emmc>;
	non-removable;
	bus-width = <8>;
	vmmc-supply = <&reg_vref_3v3>;
	vqmmc-supply = <&reg_vref_3v3>;
	voltage-ranges = <3300 3300>;
	no-1-8-v;
	keep-power-in-suspend;
	status = "okay";
};
#endif
&dma_apbh {
	/* Switch to F&S implementation of APBH DMA driver for GPMI (NAND) */
	compatible = "fus,imx6sx-dma-apbh", "fus,imx28-dma-apbh";
	iram = <&ocram>;
};

&gpmi {
	/* Switch to F&S implementation of GPMI NAND driver */
	compatible = "fus,imx6sx-gpmi-nand";
	pinctrl-names = "default";
//###	pinctrl-0 = <&pinctrl_gpmi_nand>;
	fus,skipblocks = <2>;
	fus,chunk1k;
	fus,ecc_strength = <8>;		/* Spare area 64 bytes */
//###	fus,ecc_strength = <52>;	/* Spare area 224 bytes */
	status = "okay";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	visuconnect600 {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				/* GPIO */
				/* U10_ST */
				MX6SX_PAD_KEY_COL1__GPIO2_IO_11		0x000b0
				/* U8_ST */
				MX6SX_PAD_KEY_COL3__GPIO2_IO_13		0x000b0
				/* PWR_SRC */
				MX6SX_PAD_KEY_ROW4__GPIO2_IO_19		0x000b0
				/* PHY_RST */
				MX6SX_PAD_ENET1_MDC__GPIO2_IO_2		0x0b0b0
				/* DVS */
				MX6SX_PAD_USB_H_STROBE__GPIO7_IO_11	0x130b0
				/* Backup Switch */
				MX6SX_PAD_QSPI1A_DATA1__GPIO4_IO_17	0x000b0
			>;
		};

		pinctrl_led: ledgrp {
			fsl,pins = <
				/* LED0 */
				MX6SX_PAD_QSPI1B_DATA3__GPIO4_IO_27	0x030b0
				MX6SX_PAD_QSPI1A_SS0_B__GPIO4_IO_22	0x000b0
				/* LED1 */
				MX6SX_PAD_QSPI1B_DATA2__GPIO4_IO_26	0x030b0
				MX6SX_PAD_QSPI1A_SCLK__GPIO4_IO_21	0x000b0
				/* LED2 */
				MX6SX_PAD_QSPI1B_DATA1__GPIO4_IO_25	0x030b0
				MX6SX_PAD_QSPI1A_DATA3__GPIO4_IO_19	0x000b0
				/* LED3 */
				MX6SX_PAD_QSPI1B_DATA0__GPIO4_IO_24	0x030b0
				MX6SX_PAD_QSPI1A_DATA2__GPIO4_IO_18	0x000b0
			>;
		};

#ifdef CONFIG_VC600_ETH0
		pinctrl_enet1: enet1grp {
			fsl,pins = <
				/* MDIO */
				MX6SX_PAD_ENET2_CRS__ENET1_MDIO		0x0a0b1
				MX6SX_PAD_ENET2_COL__ENET1_MDC		0x0a0b1

				/* FEC1 */
				MX6SX_PAD_ENET2_RX_CLK__ENET2_REF_CLK_25M 0x0a0b9
//				MX6SX_PAD_ENET1_TX_CLK__ENET1_REF_CLK1	0x0a0b1
				MX6SX_PAD_RGMII1_TXC__ENET1_RGMII_TXC	0x0a0b9
				MX6SX_PAD_RGMII1_TD0__ENET1_TX_DATA_0	0x0a0b1
				MX6SX_PAD_RGMII1_TD1__ENET1_TX_DATA_1	0x0a0b1
				MX6SX_PAD_RGMII1_TD2__ENET1_TX_DATA_2	0x0a0b1
				MX6SX_PAD_RGMII1_TD3__ENET1_TX_DATA_3	0x0a0b1
				MX6SX_PAD_RGMII1_TX_CTL__ENET1_TX_EN	0x0a0b1
				MX6SX_PAD_RGMII1_RXC__ENET1_RX_CLK		0x03081
				MX6SX_PAD_RGMII1_RD0__ENET1_RX_DATA_0	0x03081
				MX6SX_PAD_RGMII1_RD1__ENET1_RX_DATA_1	0x03081
				MX6SX_PAD_RGMII1_RD2__ENET1_RX_DATA_2	0x03081
				MX6SX_PAD_RGMII1_RD3__ENET1_RX_DATA_3	0x03081
				MX6SX_PAD_RGMII1_RX_CTL__ENET1_RX_EN	0x03081
			>;
		};
#endif

#ifdef CONFIG_VC600_ETH1
		pinctrl_enet2: enet2grp {
			fsl,pins = <
				/* FEC2 uses MDIO bus from FEC1 */
				MX6SX_PAD_RGMII2_TXC__ENET2_RGMII_TXC	0x0a0b9
				MX6SX_PAD_RGMII2_TD0__ENET2_TX_DATA_0	0x0a0b1
				MX6SX_PAD_RGMII2_TD1__ENET2_TX_DATA_1	0x0a0b1
				MX6SX_PAD_RGMII2_TD2__ENET2_TX_DATA_2	0x0a0b1
				MX6SX_PAD_RGMII2_TD3__ENET2_TX_DATA_3	0x0a0b1
				MX6SX_PAD_RGMII2_TX_CTL__ENET2_TX_EN	0x0a0b1
				MX6SX_PAD_RGMII2_RXC__ENET2_RX_CLK		0x03081
				MX6SX_PAD_RGMII2_RD0__ENET2_RX_DATA_0	0x03081
				MX6SX_PAD_RGMII2_RD1__ENET2_RX_DATA_1	0x03081
				MX6SX_PAD_RGMII2_RD2__ENET2_RX_DATA_2	0x03081
				MX6SX_PAD_RGMII2_RD3__ENET2_RX_DATA_3	0x03081
				MX6SX_PAD_RGMII2_RX_CTL__ENET2_RX_EN	0x03081
			>;
		};
#endif

#ifdef CONFIG_VC600_I2C_A
		/* I2C_A: RGB-Connector (SKIT -> SX8655, LED-driver PCA9632),
		   Touch Connector (SKIT -> FT5x06, MXT), SX8655 (SKIT),
		   Feature Connector (SKIT) */
		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX6SX_PAD_SD3_DATA0__I2C4_SCL		0x4001b8b1
				MX6SX_PAD_SD3_DATA1__I2C4_SDA		0x4001b8b1
			>;
		};
#endif

#ifdef CONFIG_VC600_I2C_C
		/* I2C_C: RTC (PCA8565), LVDS-Connector, SGTL5000 (SKIT) */
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO01__I2C1_SDA		0x4001b8b1
				MX6SX_PAD_GPIO1_IO00__I2C1_SCL		0x4001b8b1
			>;
		};
#endif

#ifdef CONFIG_VC600_UART_A
		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6SX_PAD_GPIO1_IO04__UART1_TX		0x1b0b1
				MX6SX_PAD_GPIO1_IO05__UART1_RX		0x1b0b1
			>;
		};
#endif

#ifdef CONFIG_VC600_UART_C
		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX6SX_PAD_SD3_DATA3__UART4_RX		0x1b0b1
				MX6SX_PAD_SD3_CMD__UART4_TX			0x1b0b1
#ifdef CONFIG_VC600_UART_C_RTSCTS
				MX6SX_PAD_SD3_DATA2__UART4_CTS_B	0x1b0b1
				MX6SX_PAD_SD3_CLK__UART4_RTS_B		0x1b0b1
#endif
				/* DTR */
				MX6SX_PAD_KEY_ROW3__GPIO2_IO_18		0x030b0
				/* DSR */
				MX6SX_PAD_KEY_ROW0__GPIO2_IO_15		0x030b0
				/* DCD */
				MX6SX_PAD_KEY_COL4__GPIO2_IO_14		0x030b0
			>;
		};
#endif

#ifdef CONFIG_VC600_USB_HOST
		pinctrl_usbotg2: usbotg2grp {
			fsl,pins = <
				/* USB_OTG2_PWR, active high */
				MX6SX_PAD_GPIO1_IO12__USB_OTG2_PWR	0x03030
				/* USB_OTG2_OC, active low */
				MX6SX_PAD_GPIO1_IO11__USB_OTG2_OC	0x1b000
			>;
		};
#endif

#ifdef CONFIG_VC600_EMMC
		/* EMMC */
		pinctrl_usdhc2_emmc: usdhc2grp-emmc {
			fsl,pins = <
				MX6SX_PAD_SD2_CMD__USDHC2_CMD		0x17091
				MX6SX_PAD_SD2_CLK__USDHC2_CLK		0x17091
				MX6SX_PAD_SD2_DATA0__USDHC2_DATA0	0x17091
				MX6SX_PAD_SD2_DATA1__USDHC2_DATA1	0x17091
				MX6SX_PAD_SD2_DATA2__USDHC2_DATA2	0x17091
				MX6SX_PAD_SD2_DATA3__USDHC2_DATA3	0x17091
				MX6SX_PAD_NAND_DATA04__USDHC2_DATA4	0x17091
				MX6SX_PAD_NAND_DATA05__USDHC2_DATA5	0x17091
				MX6SX_PAD_NAND_DATA06__USDHC2_DATA6	0x17091
				MX6SX_PAD_NAND_DATA07__USDHC2_DATA7	0x17091
				MX6SX_PAD_NAND_RE_B__USDHC2_RESET_B	0x17091
			>;
		};
#endif

	};
};
