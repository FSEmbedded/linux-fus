/*
 * Copyright 2017 NXP
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include "picocoremx8mm.dts"

&mipi_dsi {
	status = "okay";

	clocks = <&clk IMX8MM_CLK_DSI_CORE_DIV>,
			 <&clk IMX8MM_CLK_DSI_PHY_REF_DIV>, <&clk IMX8MM_CLK_CLKO2_DIV>;
	clock-names = "cfg", "pll-ref";
	assigned-clocks = <&clk IMX8MM_CLK_DSI_CORE_SRC>,
				  <&clk IMX8MM_CLK_DSI_PHY_REF_SRC>, <&clk IMX8MM_CLK_CLKO2_SRC>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_266M>,
					 <&clk IMX8MM_VIDEO_PLL1_OUT>, <&clk IMX8MM_SYS_PLL2_200M>;
	assigned-clock-rates = <266000000>, <27000000>, <200000000>;


#if 0
/* DSI mode flags */

/* video mode */
#define MIPI_DSI_MODE_VIDEO		BIT(0)
/* video burst mode */
#define MIPI_DSI_MODE_VIDEO_BURST	BIT(1)
/* video pulse mode */
#define MIPI_DSI_MODE_VIDEO_SYNC_PULSE	BIT(2)
/* enable auto vertical count mode */
#define MIPI_DSI_MODE_VIDEO_AUTO_VERT	BIT(3)
/* enable hsync-end packets in vsync-pulse and v-porch area */
#define MIPI_DSI_MODE_VIDEO_HSE		BIT(4)
/* disable hfront-porch area */
#define MIPI_DSI_MODE_VIDEO_HFP		BIT(5)
/* disable hback-porch area */
#define MIPI_DSI_MODE_VIDEO_HBP		BIT(6)
/* disable hsync-active area */
#define MIPI_DSI_MODE_VIDEO_HSA		BIT(7)
/* flush display FIFO on vsync pulse */
#define MIPI_DSI_MODE_VSYNC_FLUSH	BIT(8)
/* disable EoT packets in HS mode */
#define MIPI_DSI_MODE_EOT_PACKET	BIT(9)
/* device supports non-continuous clock behavior (DSI spec 5.6.1) */
#define MIPI_DSI_CLOCK_NON_CONTINUOUS	BIT(10)
/* transmit data in low power */
#define MIPI_DSI_MODE_LPM		BIT(11)
#endif

#if 1

#if 1 // panel out
	panel@0{
		status = "okay";
		compatible = "toshiba,tc358764";
		reg = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mipi_dsi_en>;

		clocks = <&clk IMX8MM_CLK_CLKO2_DIV>;
		reset-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
		clock-names = "ext-clk";
		ext-clk-rate = <33500000>;


		vddc-supply = <&reg_vref_1v2>;
		vddio-supply = <&reg_vref_1v8>;
		vddlvds-supply = <&reg_vref_3v3>;

		dsi,format = <0x0>; /* MIPI_DSI_FMT_RGB888 */
		dsi,lanes = <4>;
		dsi,flags = <0xB>; /* MIPI_DSI_MODE_VIDEO MIPI_DSI_MODE_VIDEO_BURST MIPI_DSI_MODE_VIDEO_AUTO_VERT */
		refresh-rate = <60>;
        rotate = <0>;

#if 0

		panel-width-mm = <152>;
		panel-height-mm = <91>;

		display-timings {
			native-mode = <&timing0>;

			timing0: innolux_g070y2_l01 {
				clock-frequency = <33500000>;
				hactive = <800>;
				vactive = <480>;
				hfront-porch = <91>;
				hsync-len = <12>;
				hback-porch = <90>;
				vfront-porch = <9>;
				vsync-len = <2>;
				vback-porch = <8>;
				de-active = <1>;
				pixelclk-active = <0>;
			};
		};
#else

		panel-width-mm = <154>;
		panel-height-mm = <85>;
		display-timings {
			native-mode = <&timing0>;

			timing0: innolux_g070y2_l01 {
				clock-frequency = <33500000>;
				hactive = <800>;
				vactive = <480>;
				hfront-porch = <40>;
				hsync-len = <128>;
				hback-porch = <88>;
				vfront-porch = <10>;
				vsync-len = <2>;
				vback-porch = <33>;
				de-active = <1>;
				pixelclk-active = <0>;
			};
		};
#endif
#if 1
		port@1 {
			mipi_dsi_out: endpoint {
				remote-endpoint = <&dsi_bridge_in>;
			};
		};
#endif
	};
#else // to bridge...

	panel@0{
		status = "okay";
		compatible = "toshiba,tc358764";
		reg = <0>;

		//pinctrl-names = "default";
		//pinctrl-0 = <&pinctrl_mipi_dsi_en>;

		clocks = <&clk IMX8MM_CLK_CLKO2_DIV>;
		clock-names = "ext-clk";
		ext-clk-rate = <3300000>;

		reset-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
		vddc-supply = <&reg_vref_1v2>;
		vddio-supply = <&reg_vref_1v8>;
		vddlvds-supply = <&reg_vref_3v3>;

		dsi,format = <0x0>; /* MIPI_DSI_FMT_RGB888 */
		dsi,lanes = <4>;
		bus-flags = <1>;
		refresh-rate = <60>;
                rotate = <0>;

		dsi-lanes = <4>;
		video-mode = <0x80B>;	/* 0: burst mode
					 * 1: non-burst mode with sync event
					 * 2: non-burst mode with sync pulse
					 */
		panel-width-mm = <152>;
		panel-height-mm = <91>;

#if 1
		display-timings {
			native-mode = <&timing0>;

			timing0: innolux_g070y2_l01 {
				clock-frequency = <33500000>;
				hactive = <800>;
				vactive = <480>;
				hfront-porch = <40>;
				hsync-len = <128>;
				hback-porch = <88>;
				vfront-porch = <10>;
				vsync-len = <2>;
				vback-porch = <33>;
				de-active = <1>;
				pixelclk-active = <0>;
			};
		};
#endif

	};

#if 0
		port@1 {
			mipi_dsi_out: endpoint {
				remote-endpoint = <&dsi_bridge_in>;
			};
		};
#endif
#endif

#else
	panel@0 {
		reg = <0>;
		compatible = "innolux,g070y2-l01-dsi"; /* one of panel-simple's 
		     		          match strings */

		power-supply = <&reg_vlcd>;

		dsi,format = <0x0>; /* MIPI_DSI_FMT_RGB888 */
		dsi,lanes = <4>;
		dsi,flags = <0x80B>; /* MIPI_DSI_MODE_VIDEO MIPI_DSI_MODE_VIDEO_BURST MIPI_DSI_MODE_VIDEO_AUTO_VERT MIPI_DSI_MODE_LPM */
		panel-width-mm  = <152>;
		panel-height-mm = <91>;
		bus-flags = <1>;
		refresh-rate = <60>;
        rotate = <0>;

#if 1
		display-timings {
			native-mode = <&timing0>;

			timing0: innolux_g070y2_l01 {
				clock-frequency = <29500000>;
				hactive = <800>;
				vactive = <480>;
				hfront-porch = <91>;
				hsync-len = <12>;
				hback-porch = <90>;
				vfront-porch = <9>;
				vsync-len = <2>;
				vback-porch = <8>;
				de-active = <1>;
				vsync-active = <0>;
				hsync-active = <0>;
			};
		};
#endif
	};

#if 0
		port@1 {
			mipi_dsi_out: endpoint {
				remote-endpoint = <&dsi_bridge_in>;
			};
		};
#endif
#endif
};

&i2c4 {
	tc358764@f {
		status = "okay";
		compatible = "toshiba,tc358764";
		reg = <0xf>;

		clocks = <&clk IMX8MM_CLK_CLKO2_DIV>;
		clock-names = "ref";


#if 0

		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mipi_dsi_en>;

		reset-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
		assigned-clocks = <&clk IMX8MM_CLK_CLKO2_SRC>;
		assigned-clock-parents =<&clk IMX8MM_SYS_PLL2_200M>;
		assigned-clock-rates = <200000000>;


		reset-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
#endif

#if 1
		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@2 {
				reg = <2>;

				dsi_bridge_in: endpoint {
					remote-endpoint = <&mipi_dsi_out>;
				};
			};
		};
#endif
	};
};

&lcdif {
	status = "okay";
};

