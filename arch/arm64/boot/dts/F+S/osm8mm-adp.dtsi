/*
 * Copyright (C) 2024 F&S Elektronik Systeme GmbH
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;

/* Set board revision as 3-digit number, e.g. 110 for board rev. 1.10 */
#define CONFIG_OSM8MM_BOARD_REVISION	120
/* Set adapter revision as 3-digit number, e.g. 110 for board rev. 1.10 */
#define CONFIG_ADP_OSM_BOARD_REVISION	120
/* Set baseboard revision as 3-digit number, e.g. 110 for board rev. 1.10 */
#define CONFIG_PICOCOREBBDSI_BOARD_REVISION	140

/* Activate this if you want to use the Cortex-M4 core */
//#define SUPPORT_M4

/* Display device-trees enables MIPI DSI */
/* MIPI DSI */
//#define CONFIG_OSM8MM_MIPI_DSI

/* Network */
#define CONFIG_OSM8MM_ETH_A

/* USB */
#define CONFIG_OSM8MM_USB_A
#define CONFIG_OSM8MM_USB_B
#define CONFIG_OSM8MM_USB_A_USBC
#define CONFIG_OSM8MM_USB_A_USBC_ALERT

/* PCIe */
#define CONFIG_OSM8MM_PCIE_A

/* I2C */
#define CONFIG_OSM8MM_I2C_A /* OSM: EEPROM BB: I2C_A */
#define CONFIG_OSM8MM_I2C_B /* ADP: SGTL5000 BB: I2C_D */
/* OSM: I2C_CAM_PCI ADP: I2C_CAM  BB: I2C_B */
/* OSM: I2C_CAM_PCI ADP: MPCIE_SM BB: I2C_C */
#define CONFIG_OSM8MM_I2C_CAM_PCI

/* PWM and backlight brightness */
//#define CONFIG_OSM8MM_BL_CTRL
#define CONFIG_OSM8MM_PWM_0
#define CONFIG_OSM8MM_PWM_1

/* UART_CONN - UART1 */
#define CONFIG_OSM8MM_UART_CONN

/* UART_B - UART3 */
#define CONFIG_OSM8MM_UART_B
#define CONFIG_OSM8MM_UART_B_RTSCTS

/* UART_C - UART4 */
#define CONFIG_OSM8MM_UART_C

/* FSPI (Single/Dual/Quad) -> Uncommented because of SPI-GPIO */
//#define CONFIG_OSM8MM_SPI_A

/* Audio */
#define CONFIG_OSM8MM_I2S_A

/* Camera on serial MIPI CSI interface */
#define CONFIG_OSM8MM_SERIAL_CAMERA
/* Experimental implementation for Basler dart daA4200-30mci.
 * Define CONFIG_OSM8MM_SERIAL_CAMERA must also be set.
 */

/*
 * SD_A - External SD port with Card Detect (CD) and Write Protect (WP)
 * On picocoremx8mm SKIT: external port is Micro-SD card slot with CD but
 * without WP
 */
#define CONFIG_OSM8MM_SDIO_A
#define CONFIG_OSM8MM_SDIO_A_CD
#define CONFIG_OSM8MM_SDIO_A_WP

/* Check for invalid CONFIG combinations */

/*
 * Exclude devices from Linux that are used by the Cortex-M4 FreeRTOS examples
 *
 * - UART_D: Debug Console for Cortex-M4
 * - I2C_A:  I2C Bus used in I2C examples
 * - I2C_D:  I2C Bus used by the Audio Codec in SAI examples
 * - SPI_B:  SPI_B is used for ECSPI examples
 * - SDMA1:  Gets removed at another Point, it is used by SPI_B and UART driver
 *           examples
 * - SPI_A:  SPI_A using SDMA1 but SDMA1 is excluded so also exclude SPI_A
 *
 * In addition the following pins are already predefined in FreeRTOS to be used
 * as arbitrary GPIOs. Please remove the comment of the appropriate line of
 * each device from which you use any signal in your own application.
 *
 * - AUDIO_3: GPT capture driver example uses one of its Pins
 */
#ifdef SUPPORT_M4
#undef CONFIG_OSM8MM_UART_C
//#undef CONFIG_OSM8MM_I2C_A
//#undef CONFIG_OSM8MM_SPI_A
//#undef CONFIG_OSM8MM_SPI_B
/* Only undef if using audio/sai examples */
//#undef CONFIG_OSM8MM_I2C_B
//#undef CONFIG_OSM8MM_I2S_A
#endif

/* Disable PWM_0 if BL_CTRL is enabled */
#ifdef CONFIG_OSM8MM_BL_CTRL
#undef CONFIG_OSM8MM_PWM_0
#endif

/* Set different settings for corresponding baseboard revision */
#if CONFIG_PICOCOREBBDSI_BOARD_REVISION < 130
#undef CONFIG_OSM8MM_USB_A_USBC
#endif

#if !defined(CONFIG_OSM8MM_USB_A_USBC) \
    || (CONFIG_PICOCOREBBDSI_BOARD_REVISION < 140)
#undef CONFIG_OSM8MM_USB_A_USBC_ALERT
#endif

#include "osm8mm.dtsi"

/* osm_spi_a overwritten by SPI bitbanging driver */
/delete-node/ &osm_spi_a;

/ {
	model = "F&S OSM8MM";

	regulators {
		/* SGTL5000 analog voltage */
		reg_sgtl5000_vdda: sgtl5000_vdda {
			compatible = "regulator-fixed";
			regulator-name = "VDDA-supply";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		/* SGTL5000 I/O voltage */
		reg_sgtl5000_vddio: sgtl5000_vddio {
			compatible = "regulator-fixed";
			regulator-name = "VDDIO-supply";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		/* SGTL5000 internal digital voltage */
		reg_sgtl5000_vddd: sgtl5000_vddd {
			compatible = "regulator-fixed";
			regulator-name = "VDDD-supply";
			regulator-min-microvolt = <1500000>;
			regulator-max-microvolt = <1500000>;
			regulator-always-on;
		};

		reg_mipi_rst: regulator_mipi_rst {
			compatible = "regulator-fixed";
			regulator-name = "MIPI_RST";
			gpio = <&gpio1 4 GPIO_ACTIVE_HIGH>;
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-boot-on;
			regulator-always-on;
			enable-active-high;
			startup-delay-us = <1000>;
			off-on-delay-us = <12000>;
		};

		reg_touch_rst: regulator_touch_rst {
			compatible = "regulator-fixed";
			regulator-name = "TOUCH_RST";
			gpio = <&gpio1 7 GPIO_ACTIVE_HIGH>;
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-boot-on;
			regulator-always-on;
			enable-active-high;
			startup-delay-us = <1000>;
			off-on-delay-us = <12000>;
		};
	};

	sound-sgtl5000 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "imx-sgtl5000";
		simple-audio-card,format = "i2s";
		simple-audio-card,frame-master = <&codecdai>;
		simple-audio-card,bitclock-master = <&codecdai>;
		simple-audio-card,widgets =
			"Line", "Line Out Jack",
			"Line", "Line In Jack",
			"Microphone", "Microphone Jack",
			"Headphone", "Headphone Jack";
		simple-audio-card,routing =
			"Line Out Jack", "LINE_OUT",
			"LINE_IN", "Line In Jack", 
			"MIC_IN", "Microphone Jack",
			"Headphone Jack", "HP_OUT";

		cpudai: simple-audio-card,cpu {
			sound-dai = <&osm_i2s_a>;
		};

		codecdai: simple-audio-card,codec {
			sound-dai = <&sgtl5000>;
		};
	};

	/* SPI bitbanging driver */
	osm_spi_a: spi {
		compatible = "spi-gpio";
		#address-cells = <0x1>;
		#size-cells = <0x0>;

		sck-gpios = <&gpio3 0 0>;
		miso-gpios = <&gpio3 7 0>;
		mosi-gpios = <&gpio3 6 0>;
		cs-gpios = <&gpio3 1 0>;
		num-chipselects = <1>;

		spidev@0 {
			compatible = "linux,spidev";
			spi-max-frequency = <20000000>;
			reg = <0>;
			status = "okay";
		};
	};
};

&bdinfo{
	board_name = "osm8mm";
};

#if CONFIG_ADP_OSM_BOARD_REVISION < 120
#if defined(CONFIG_OSM8MM_MIPI_DSI) \
|| defined(CONFIG_OSM8MM_MIPI_DSI_LVDS)
&reg_vlcd {
	gpio = <&gpio1 0 GPIO_ACTIVE_HIGH>;
};
#endif

#ifdef CONFIG_OSM8MM_BL_CTRL
&reg_ldb_bl {
	gpio = <&gpio1 1 GPIO_ACTIVE_HIGH>;
};
#endif
#endif

&osm_i2c_b {
	sgtl5000: sgtl5000@a {
		#sound-dai-cells = <0>;
		compatible = "fsl,sgtl5000";
		/* MCLK is needed for i2c sgtl driver */
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sgtl5000>;
		reg = <0xa>;
		mono2both;
		clocks = <&clk IMX8MM_CLK_SAI5_ROOT>;
		VDDA-supply = <&reg_sgtl5000_vdda>;
		VDDIO-supply = <&reg_sgtl5000_vddio>;
		VDDD-supply = <&reg_sgtl5000_vddd>;
	};

#ifdef CONFIG_OSM8MM_USB_A_USBC
	/* USB-C */
	ptn5110: tcpc@52 {
		compatible = "nxp,ptn5110";
#ifdef CONFIG_OSM8MM_USB_A_USBC_ALERT
		interrupt-parent = <&gpio1>;
		interrupts = <6 IRQ_TYPE_LEVEL_LOW>;
#endif
		reg = <0x52>;
		status = "okay";

		port {
			typec1_dr_sw: endpoint {
				remote-endpoint = <&usb1_drd_sw>;
			};
		};

		typec1_con: connector {
			compatible = "usb-c-connector";
			label = "USB-C";
			power-role = "dual";
			data-role = "dual";
			try-power-role = "sink";
			source-pdos = <PDO_FIXED(5000, 3000,
			PDO_FIXED_USB_COMM)>;
			sink-pdos = <PDO_FIXED(5000, 3000, PDO_FIXED_USB_COMM)
				     PDO_VAR(5000, 20000, 3000)>;
			op-sink-microwatt = <15000000>;
			self-powered;
		};
	};
#endif
};

&osm_i2c_cam_pci {
	basler_camera_mipi1: basler_camera_mipi@36 {
		compatible = "basler,basler-camera";
		reg = <0x36>;
		status = "okay";

		port {
			basler_camera_mipi1_ep: endpoint {
				remote-endpoint = <&mipi1_sensor_ep>;

				/* IMPORTANT: The following three entries needs
				 * to be held in sync with the information
				 * stored in the mipi1_sensor_ep node.
				 */
				 data-lanes = <1 2 3 4>;
				 clock-lanes = <0>;
				 link-frequencies = /bits/ 64 <496000000>;
			};
		};
	};
};

#if 0
/* SPI not implemented in NXP FlexSPI driver, so use SPI-GPIO */
&osm_spi_a {
	cs-gpios = <0>;

	spidev@0 {
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <1>;
	};
};
#endif

&osm_eth_a {
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy4>;

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy4: ethernet-phy@4 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
			rtl821x,clkout-disable;
			rtl821x,aldps-enable;
			rtl821x,ssc-rxc-enable;
			rtl821x,ssc-sysclk-enable;
			rtl821x,ssc-clkout-enable;
			rtl821x,led-link = <2>; // LED1 for link indication
			rtl821x,led-act = <2>; // LED1 for activity
			eee-broken-1000t;
		};
	};
};

&osm_usb_a {
	dr_mode = "otg";
#ifdef CONFIG_OSM8MM_USB_A_USBC
	hnp-disable;
	srp-disable;
	adp-disable;
	usb-role-switch;

	port {
		usb1_drd_sw: endpoint {
			remote-endpoint = <&typec1_dr_sw>;
		};
	};
#endif
};

&osm_usb_b {
	dr_mode = "host";
};

&osm_csi {
	/delete-property/ csi,mipi_rst;

	port {
		mipi1_sensor_ep: endpoint@1 {
			remote-endpoint = <&basler_camera_mipi1_ep>;
			/* If the following entries are changed, then
			 * the entries in the basler_camera_mipi1_ep node
			 * need to update too.
			 */
			/* On the i.mx8mmini NXP uses data-lanes
			 * other than expected by the kernel.
			 * On the imx8mmini the enry data-lanes
			 * must contain the number of data lanes.
			 */
			data-lanes = <4>;
			clock-lanes = <0>;
			link-frequencies = /bits/ 64 <496000000>;
			csis-hs-settle = <13>;
			csis-clk-settle = <2>;
			csis-wclk;
		};

		csi1_mipi_ep: endpoint@2 {
			remote-endpoint = <&csi1_ep>;
		};
	};
};

&osm_csi_bridge {
	dma-coherent;
	bsl,dma-invalidate;

	port {
		csi1_ep: endpoint {
			remote-endpoint = <&csi1_mipi_ep>;
		};
	};
};

/delete-node/ &pinctrl_osm_i2s_a;

&iomuxc {
	imx8mm-picocoremx8mm {
		pinctrl_osm_i2s_a: sai5grp {
			fsl,pins = <
				MX8MM_IOMUXC_SAI5_RXD1_SAI5_TX_SYNC	0x000d6
				MX8MM_IOMUXC_SAI5_RXD2_SAI5_TX_BCLK	0x000d6
				MX8MM_IOMUXC_SAI5_RXD3_SAI5_TX_DATA0	0x000d6
				MX8MM_IOMUXC_SAI5_RXD0_SAI5_RX_DATA0	0x000d6
			>;
		};

		pinctrl_sgtl5000: sgtl5000grp {
			fsl,pins = <
				MX8MM_IOMUXC_SAI5_MCLK_SAI5_MCLK	0x000d6
			>;
		};

#ifdef IMX8MM_TOUCH_INTERRUPT_PINCTRL
		pinctrl_touch_int: touchintgrp {
			fsl,pins = <
				MX8MM_IOMUXC_GPIO1_IO05_GPIO1_IO5	0x00084
			>;
		};
#endif
	};
};

&pinctrl_hog {
	fsl,pins = <
		/* CARRIER_PWR_EN */
		MX8MM_IOMUXC_SAI2_MCLK_GPIO4_IO27	0x00004

		/* GPIO_A */
		/* 0 */ MX8MM_IOMUXC_GPIO1_IO00_GPIO1_IO0	0x00004
		/* 1 */ MX8MM_IOMUXC_GPIO1_IO01_GPIO1_IO1	0x00004
		/* 2 */ MX8MM_IOMUXC_GPIO1_IO04_GPIO1_IO4	0x00004
#ifndef IMX8MM_TOUCH_INTERRUPT_PINCTRL
		/* 3 */ MX8MM_IOMUXC_GPIO1_IO05_GPIO1_IO5	0x00004
#endif
		/* 4 */ MX8MM_IOMUXC_GPIO1_IO06_GPIO1_IO6	0x00004
		/* 5 */ MX8MM_IOMUXC_GPIO1_IO07_GPIO1_IO7	0x00004
#ifndef CONFIG_OSM8MM_SPI_A_CS1
		/* 6 */ MX8MM_IOMUXC_NAND_CE1_B_GPIO3_IO2	0x00004
#endif
#ifndef CONFIG_OSM8MM_SPI_B_CS1
		/* 7 */ MX8MM_IOMUXC_ECSPI1_SCLK_GPIO5_IO6	0x00004
#endif
		/* GPIO_B */
		/* 0 */ MX8MM_IOMUXC_GPIO1_IO08_GPIO1_IO8	0x00004
		/* 1 */ MX8MM_IOMUXC_GPIO1_IO09_GPIO1_IO9	0x00004
		/* 2 */ MX8MM_IOMUXC_GPIO1_IO10_GPIO1_IO10	0x00004
		/* 3 */ MX8MM_IOMUXC_GPIO1_IO11_GPIO1_IO11	0x00004
		/* 4 */ MX8MM_IOMUXC_ECSPI1_MOSI_GPIO5_IO7	0x00004
		/* 5 */ MX8MM_IOMUXC_SAI1_RXD7_GPIO4_IO9	0x00004
		/* 6 */ MX8MM_IOMUXC_SAI1_RXD6_GPIO4_IO8	0x00004
		/* 7 */ MX8MM_IOMUXC_SAI1_RXD5_GPIO4_IO7	0x00004

		/* GPIO_C */
		/* 0 */ MX8MM_IOMUXC_SAI1_RXD4_GPIO4_IO6	0x00004
		/* 1 */ MX8MM_IOMUXC_SAI1_RXD3_GPIO4_IO5	0x00004
		/* 2 */ MX8MM_IOMUXC_SAI1_RXD2_GPIO4_IO4	0x00004
		/* 3 */ MX8MM_IOMUXC_SAI1_RXD1_GPIO4_IO3	0x00004
		/* 4 */ /* VDD_EN: Disable display for usage */
		/* 4 */ MX8MM_IOMUXC_SAI3_TXD_GPIO5_IO1		0x00004
		/* 5 */ /* BL_EN: Disable backlight control for usage */
		/* 5 */ MX8MM_IOMUXC_SAI3_TXC_GPIO5_IO0		0x00004
		/* 6 */ /* CAM_EN: Disable CAM for usage */
		/* 6 */ MX8MM_IOMUXC_SAI2_TXC_GPIO4_IO25	0x00004
		/* 7 */ /* CAM_RST: Disable CAM for usage */
		/* 7 */ MX8MM_IOMUXC_SAI2_TXD0_GPIO4_IO26	0x00004

#ifndef CONFIG_OSM8MM_SDIO_A
		MX8MM_IOMUXC_SD2_CLK_GPIO2_IO13		0x00004
		MX8MM_IOMUXC_SD2_CMD_GPIO2_IO14		0x00004
		MX8MM_IOMUXC_SD2_DATA0_GPIO2_IO15	0x00004
		MX8MM_IOMUXC_SD2_DATA1_GPIO2_IO16	0x00004
		MX8MM_IOMUXC_SD2_DATA2_GPIO2_IO17	0x00004
		MX8MM_IOMUXC_SD2_DATA3_GPIO2_IO18	0x00004
		MX8MM_IOMUXC_SD2_RESET_B_GPIO2_IO19	0x00004
#endif

#ifndef CONFIG_OSM8MM_SDIO_A_WP
		MX8MM_IOMUXC_SD2_WP_GPIO2_IO20		0x00004
#endif

#ifndef CONFIG_OSM8MM_SDIO_A_CD
		MX8MM_IOMUXC_SD2_CD_B_GPIO2_IO12	0x00004
#endif

#ifndef CONFIG_OSM8MM_SDIO_B
		MX8MM_IOMUXC_NAND_WE_B_GPIO3_IO17		0x00004
		MX8MM_IOMUXC_NAND_WP_B_GPIO3_IO18		0x00004
		MX8MM_IOMUXC_NAND_DATA04_GPIO3_IO10		0x00004
		MX8MM_IOMUXC_NAND_DATA05_GPIO3_IO11		0x00004
		MX8MM_IOMUXC_NAND_DATA06_GPIO3_IO12		0x00004
		MX8MM_IOMUXC_NAND_DATA07_GPIO3_IO13		0x00004
		MX8MM_IOMUXC_NAND_READY_B_GPIO3_IO16	0x00004
#endif

#ifndef CONFIG_OSM8MM_SDIO_B_8_BIT
		MX8MM_IOMUXC_NAND_RE_B_GPIO3_IO15	0x00004
		MX8MM_IOMUXC_NAND_CE2_B_GPIO3_IO3	0x00004
		MX8MM_IOMUXC_NAND_CE3_B_GPIO3_IO4	0x00004
		MX8MM_IOMUXC_NAND_CLE_GPIO3_IO5		0x00004
#endif

#ifndef CONFIG_OSM8MM_SDIO_B_WP
		MX8MM_IOMUXC_SAI2_RXD0_GPIO4_IO23	0x00004
#endif

#ifndef CONFIG_OSM8MM_SDIO_B_CD
		MX8MM_IOMUXC_SAI2_RXC_GPIO4_IO22	0x00004
#endif

#ifndef CONFIG_OSM8MM_I2C_A
		/* I2C_B */
		MX8MM_IOMUXC_I2C2_SCL_GPIO5_IO16	0x00004
		MX8MM_IOMUXC_I2C2_SDA_GPIO5_IO17	0x00004
#endif

#ifndef CONFIG_OSM8MM_I2C_B
		/* I2C_C */
		MX8MM_IOMUXC_I2C3_SCL_GPIO5_IO18	0x00004
		MX8MM_IOMUXC_I2C3_SDA_GPIO5_IO19	0x00004
#endif

#ifndef CONFIG_OSM8MM_I2C_CAM_PCI
		/* I2C_A */
		MX8MM_IOMUXC_I2C4_SCL_GPIO5_IO20	0x00004
		MX8MM_IOMUXC_I2C4_SDA_GPIO5_IO21	0x00004
#endif

#ifndef CONFIG_OSM8MM_UART_CONN
		MX8MM_IOMUXC_UART1_RXD_GPIO5_IO22	0x00004
		MX8MM_IOMUXC_UART1_TXD_GPIO5_IO23	0x00004
#endif

#ifndef CONFIG_OSM8MM_UART_A
		MX8MM_IOMUXC_UART2_RXD_GPIO5_IO24	0x00004
		MX8MM_IOMUXC_UART2_TXD_GPIO5_IO25	0x00004
#endif
#ifndef CONFIG_OSM8MM_UART_A_RTSCTS
		MX8MM_IOMUXC_SAI3_RXC_GPIO4_IO29	0x00004
		MX8MM_IOMUXC_SAI3_RXD_GPIO4_IO30	0x00004
#endif

#ifndef CONFIG_OSM8MM_UART_B
		MX8MM_IOMUXC_UART3_RXD_GPIO5_IO26	0x00004
		MX8MM_IOMUXC_UART3_TXD_GPIO5_IO27	0x00004
#endif
#ifndef CONFIG_OSM8MM_UART_B_RTSCTS
		MX8MM_IOMUXC_ECSPI1_MISO_GPIO5_IO8	0x00004
		MX8MM_IOMUXC_ECSPI1_SS0_GPIO5_IO9	0x00004
#endif

#if !defined(CONFIG_OSM8MM_UART_C) && !defined(SUPPORT_M4)
		MX8MM_IOMUXC_UART4_RXD_GPIO5_IO28	0x00004
		MX8MM_IOMUXC_UART4_TXD_GPIO5_IO29	0x00004
#endif

#ifndef CONFIG_OSM8MM_ETH_A
		/* ETH */
		MX8MM_IOMUXC_ENET_MDC_GPIO1_IO16	0x00004
		MX8MM_IOMUXC_ENET_MDIO_GPIO1_IO17	0x00004
		MX8MM_IOMUXC_ENET_TX_CTL_GPIO1_IO22	0x00004
		MX8MM_IOMUXC_ENET_TXC_GPIO1_IO23	0x00004
		MX8MM_IOMUXC_ENET_TD0_GPIO1_IO21	0x00004
		MX8MM_IOMUXC_ENET_TD1_GPIO1_IO20	0x00004
		MX8MM_IOMUXC_ENET_TD2_GPIO1_IO19	0x00004
		MX8MM_IOMUXC_ENET_TD3_GPIO1_IO18	0x00004
		MX8MM_IOMUXC_ENET_RX_CTL_GPIO1_IO24	0x00004
		MX8MM_IOMUXC_ENET_RXC_GPIO1_IO25	0x00004
		MX8MM_IOMUXC_ENET_RD0_GPIO1_IO26	0x00004
		MX8MM_IOMUXC_ENET_RD1_GPIO1_IO27	0x00004
		MX8MM_IOMUXC_ENET_RD2_GPIO1_IO28	0x00004
		MX8MM_IOMUXC_ENET_RD3_GPIO1_IO29	0x00004
#endif
		/* USB */
#ifndef CONFIG_OSM8MM_USB_A
		MX8MM_IOMUXC_GPIO1_IO12_GPIO1_IO12	0x00004
		MX8MM_IOMUXC_GPIO1_IO13_GPIO1_IO13	0x00004
#endif

#ifndef CONFIG_OSM8MM_USB_B
		MX8MM_IOMUXC_GPIO1_IO14_GPIO1_IO14	0x00004
		MX8MM_IOMUXC_GPIO1_IO15_GPIO1_IO15	0x00144
#endif

#ifndef CONFIG_OSM8MM_SPI_A
		/* SPI_A */
		MX8MM_IOMUXC_NAND_ALE_GPIO3_IO0		0x00004
		MX8MM_IOMUXC_NAND_DATA00_GPIO3_IO6	0x00004
		MX8MM_IOMUXC_NAND_DATA01_GPIO3_IO7	0x00004
		MX8MM_IOMUXC_NAND_DATA02_GPIO3_IO8	0x00004
		MX8MM_IOMUXC_NAND_DATA03_GPIO3_IO9	0x00004
		MX8MM_IOMUXC_NAND_CE0_B_GPIO3_IO1	0x00004
#endif

#ifndef CONFIG_OSM8MM_SPI_B
		/* SPI_B */
		MX8MM_IOMUXC_ECSPI2_MISO_GPIO5_IO12	0x00004
		MX8MM_IOMUXC_ECSPI2_MOSI_GPIO5_IO11	0x00004
		MX8MM_IOMUXC_ECSPI2_SCLK_GPIO5_IO10	0x00004
		MX8MM_IOMUXC_ECSPI2_SS0_GPIO5_IO13	0x00004
#endif

#ifndef CONFIG_OSM8MM_I2S_A
		/* AUDIO_A */
		MX8MM_IOMUXC_SAI5_MCLK_GPIO3_IO25	0x00004
		MX8MM_IOMUXC_SAI5_RXD0_GPIO3_IO21	0x00004
		MX8MM_IOMUXC_SAI5_RXD1_GPIO3_IO22	0x00004
		MX8MM_IOMUXC_SAI5_RXD2_GPIO3_IO23	0x00004
		MX8MM_IOMUXC_SAI5_RXD3_GPIO3_IO24	0x00004
#endif

#ifndef CONFIG_OSM8MM_PCIE_A
		/* mPCIE */
		MX8MM_IOMUXC_SAI5_RXFS_GPIO3_IO19	0x00004
		MX8MM_IOMUXC_SAI5_RXC_GPIO3_IO20	0x00004
#endif

#if !defined(CONFIG_OSM8MM_BL_CTRL) && !defined(CONFIG_OSM8MM_PWM_0)
		MX8MM_IOMUXC_SAI3_MCLK_GPIO5_IO2	0x00004
#endif

#ifndef CONFIG_OSM8MM_PWM_1
		MX8MM_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5	0x00004
#endif

#ifndef CONFIG_OSM8MM_PWM_2
		MX8MM_IOMUXC_SPDIF_RX_GPIO5_IO4			0x00004
#endif

#ifndef CONFIG_OSM8MM_PWM_3
		MX8MM_IOMUXC_SPDIF_TX_GPIO5_IO3			0x00004
#endif
	>;
};
