/*
* Copyright 2024 F&S Elektronik Systeme GmbH
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*/

#include <dt-bindings/usb/pd.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/rtc/nxp,pcf85263.h>
#include <fsversion.h>

/* Do we have HDMI? */
#if ((CONFIG_FSSMMX8MP_PANEL0 == DISPLAY_HDMI) \
    || (CONFIG_FSSMMX8MP_PANEL1 == DISPLAY_HDMI) \
    || (CONFIG_FSSMMX8MP_PANEL2 == DISPLAY_HDMI))
#define CONFIG_FSSMMX8MP_HDMI
#define CONFIG_FSSMMX8MP_HDMI_AUDIO // TODO:
#define CONFIG_FSSMMX8MP_HDMI_CEC
#endif

/* Do we have LVDS0? */
#if ((CONFIG_FSSMMX8MP_PANEL0 == DISPLAY_LVDS0) \
    || (CONFIG_FSSMMX8MP_PANEL1 == DISPLAY_LVDS0) \
    || (CONFIG_FSSMMX8MP_PANEL2 == DISPLAY_LVDS0))
#define CONFIG_FSSMMX8MP_LVDS0
#endif

/* Do we have LVDS1? */
#if ((CONFIG_FSSMMX8MP_PANEL0 == DISPLAY_LVDS1) \
    || (CONFIG_FSSMMX8MP_PANEL1 == DISPLAY_LVDS1) \
    || (CONFIG_FSSMMX8MP_PANEL2 == DISPLAY_LVDS1))
/* Is dual mode enabled? */
#ifndef CONFIG_FSSMMX8MP_LVDS_DUAL_CHANNEL
#define CONFIG_FSSMMX8MP_LVDS1
#endif
#endif

/* Do we have MIPI_DSI1? */
#if ((CONFIG_FSSMMX8MP_PANEL0 == DISPLAY_MIPI0) \
    || (CONFIG_FSSMMX8MP_PANEL1 == DISPLAY_MIPI0) \
    || (CONFIG_FSSMMX8MP_PANEL2 == DISPLAY_MIPI0))
/* LVDS0 and MIPI_DSI0 don't allowed at same time */
#ifndef CONFIG_FSSMMX8MP_LVDS0
#define CONFIG_FSSMMX8MP_MIPI_DSI0
#endif
#endif

/ {
	chosen {
		stdout-path = &uart2;
	};

	aliases {
		ethernet0 = &eqos;
		ethernet1 = &fec;
		spi0 = &ecspi1;
		spi1 = &ecspi2;
		i2c0 = &i2c1;
		i2c1 = &i2c2;
		i2c2 = &i2c3;
		i2c3 = &i2c4;
		i2c4 = &i2c5;
		i2c5 = &i2c6;
		eeprom = &eeprom;
#ifdef CONFIG_FSSMMX8MP_WLAN_MARVELL_DRV
		wlan = &mwifiex;
		wlan-reset = &reg_wlan_pdn;
#endif
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0 0x14000000>;
			alloc-ranges = <0 0x40000000 0 0x40000000>;
			linux,cma-default;
		};

		/* remove this node because the region used
		 * only by tuning tool
		 * */
		/delete-node/isp0@94400000;
	};

	/* -------------------- BOARD INFO -------------------- */
	bdinfo: bdinfo {
		compatible = "bdinfo";
		board_name = "fssmmx8mp";
		dts_version = FS_LINUX_VERSION;
	};

	regulators {
			compatible = "simple-bus";
			#address-cells = <1>;
			#size-cells = <0>;

			reg_vref_1v2: regulator_1v2 {
				compatible = "regulator-fixed";
				regulator-name = "vref-1V2";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-always-on;
			};

			reg_vref_1v8: regulator_1v8 {
				compatible = "regulator-fixed";
				regulator-name = "vref-1V8";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
			};

			reg_vref_3v3: regulator_3v3 {
				compatible = "regulator-fixed";
				regulator-name = "vref-3V3";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			/* LCD0 power on voltage */
			/omit-if-no-ref/
			reg_vlcd_a: vlcd_a {
				compatible = "regulator-fixed";
				regulator-name = "LCD0_VDD_EN";
				gpio = <&gpio4 20 GPIO_ACTIVE_HIGH>;
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				enable-active-high;
			};

			/* LCD1 power on voltage */
			/omit-if-no-ref/
			reg_vlcd_b: vlcd_b {
				compatible = "regulator-fixed";
				regulator-name = "LCD1_VDD_EN";
				gpio = <&gpio4 2 GPIO_ACTIVE_HIGH>;
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				enable-active-high;
			};

#ifdef CONFIG_FSSMMX8MP_SECURE
			/* SE050 power on voltage */
			reg_vref_se050: regulator_se050 {
				compatible = "regulator-fixed";
				regulator-name = "SE050_ENA";
				gpio = <&gpio1 0 GPIO_ACTIVE_HIGH>;
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-always-on;
				enable-active-high;
			};
#endif
	};

#ifdef CONFIG_FSSMMX8MP_BL_CTRL_A
	backlight_ldb_a: backlight_ldb_a {
		compatible = "pwm-backlight";
		#pwm-cells = <3>;
		pwms = <&pwm4 0 3000000 PWM_POLARITY_INVERTED>;
		power-supply = <&reg_ldb_bl_a>;
		brightness-levels = <0 1 5 10 18 28 41 56
				     73 92 113 137 163 192 222 255>;
		default-brightness-level = <14>;
		fb-names = "mxs-lcdif0";
	};

	reg_ldb_bl_a: ldb-bl-a {
		compatible = "regulator-fixed";
		regulator-name = "ldb-bl0";
		gpio = <&gpio4 1 GPIO_ACTIVE_HIGH>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};
#endif

#ifdef CONFIG_FSSMMX8MP_BL_CTRL_B
	backlight_ldb_b: backlight_ldb_b {
		compatible = "pwm-backlight";
		#pwm-cells = <3>;
		pwms = <&pwm2 0 3000000 PWM_POLARITY_INVERTED>;
		power-supply = <&reg_ldb_bl_b>;
		brightness-levels = <0 1 5 10 18 28 41 56
				     73 92 113 137 163 192 222 255>;
		default-brightness-level = <14>;
		fb-names = "mxs-lcdif1";
	};

	reg_ldb_bl_b: ldb-bl-b {
		compatible = "regulator-fixed";
		regulator-name = "ldb-bl1";
		gpio = <&gpio4 3 GPIO_ACTIVE_HIGH>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};
#endif

#ifdef CONFIG_FSSMMX8MP_USB_HOST
	usb_host_reset: gpio-reset {
		compatible = "gpio-reset";
		reset-gpios = <&pca6416 14 GPIO_ACTIVE_LOW>;
		reset-delay-us = <10>;
		#reset-cells = <0>;
	};
#endif

#ifdef CONFIG_FSSMMX8MP_WLAN_MARVELL_DRV
	reg_wlan_pdn: regulator-usdhc3-wlan {
		compatible = "regulator-fixed";
		regulator-name = "WLAN_RESET";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio4 18 GPIO_ACTIVE_HIGH>;
		off-on-delay-us = <1000>;
		enable-active-low;
	};
#endif

#ifdef CONFIG_FSSMMX8MP_HDMI_AUDIO
	sound-hdmi {
		compatible = "fsl,imx-audio-hdmi";
		model = "audio-hdmi";
		audio-cpu = <&aud2htx>;
		hdmi-out;
		constraint-rate = <44100>,<88200>,
		<176400>,<32000>,<48000>,<96000>,
		<192000>;
		status = "okay";
	};
#endif /* CONFIG_FSSMMX8MP_HDMI_AUDIO */

#ifdef CONFIG_FSSMMX8MP_LVDS0
	lvds0_panel {
		compatible = "panel-lvds";
		power-supply = <&reg_vlcd_a>;
		backlight = <&backlight_ldb_a>;
		data-mapping = CONFIG_FSSMMX8MP_LVDS0_PANEL_MAPPING;
		label = CONFIG_FSSMMX8MP_LVDS0_PANEL_LABEL;
		width-mm = <CONFIG_FSSMMX8MP_LVDS0_PANEL_WIDTH>;
		height-mm = <CONFIG_FSSMMX8MP_LVDS0_PANEL_HEIGHT>;
		status = "okay";

		panel-timing {
			CONFIG_FSSMMX8MP_LVDS0_PANEL_TIMING
		};

		port {
			panel_lvds0_in: endpoint {
				remote-endpoint = <&lvds0_out>;
			};
		};
	};
#endif /* CONFIG_FSSMMX8MP_LVDS0 */

#ifdef CONFIG_FSSMMX8MP_LVDS1
	lvds1_panel {
		compatible = "panel-lvds";
		power-supply = <&reg_vlcd_b>;
		backlight = <&backlight_ldb_b>;
		data-mapping = CONFIG_FSSMMX8MP_LVDS1_PANEL_MAPPING;
		label = CONFIG_FSSMMX8MP_LVDS1_PANEL_LABEL;
		width-mm = <CONFIG_FSSMMX8MP_LVDS1_PANEL_WIDTH>;
		height-mm = <CONFIG_FSSMMX8MP_LVDS1_PANEL_HEIGHT>;
		status = "okay";

		panel-timing {
			CONFIG_FSSMMX8MP_LVDS1_PANEL_TIMING
		};

		port {
			panel_lvds1_in: endpoint {
				remote-endpoint = <&lvds1_out>;
			};
		};
	};
#endif /* CONFIG_FSSMMX8MP_LVDS1 */
};

&aud2htx {
#ifdef CONFIG_FSSMMX8MP_HDMI_AUDIO
	status = "okay";
#else
	status = "disabled";
#endif
};


&clk {
	init-on-array = <IMX8MP_CLK_HSIO_ROOT>;
};

&A53_0 {
	cpu-supply = <&buck2>;
};
&A53_1 {
	cpu-supply = <&buck2>;
};
&A53_2 {
	cpu-supply = <&buck2>;
};
&A53_3 {
	cpu-supply = <&buck2>;
};

#ifdef CONFIG_FSSMMX8MP_ETH_A
&eqos {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_eqos>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	snps,force_thresh_dma_mode;
	snps,mtl-tx-config = <&mtl_tx_setup>;
	snps,mtl-rx-config = <&mtl_rx_setup>;
	status = "okay";

	mdio {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@4 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
			rtl821x,clkout-disable;
			rtl821x,aldps-enable;
			rtl821x,ssc-rxc-enable;
			rtl821x,ssc-sysclk-enable;
			rtl821x,ssc-clkout-enable;
			rtl821x,led-link = <2>; // LED2 for link indication
			rtl821x,led-act = <0>; // LED0 for activity
			reset-gpios = <&pca6416 11 GPIO_ACTIVE_LOW>;
			reset-assert-us = <10000>;
			reset-deassert-us = <50000>;
			interrupt-parent = <&gpio1>;
			interrupts = <6 IRQ_TYPE_LEVEL_LOW>;
			eee-broken-1000t;
		};
	};

	mtl_tx_setup: tx-queues-config {
		snps,tx-queues-to-use = <5>;
		snps,tx-sched-sp;
		queue0 {
			snps,dcb-algorithm;
			snps,priority = <0x1>;
		};
		queue1 {
			snps,dcb-algorithm;
			snps,priority = <0x2>;
		};
		queue2 {
			snps,dcb-algorithm;
			snps,priority = <0x4>;
		};
		queue3 {
			snps,dcb-algorithm;
			snps,priority = <0x8>;
		};
		queue4 {
			snps,dcb-algorithm;
			snps,priority = <0xf0>;
		};
	};
	mtl_rx_setup: rx-queues-config {
		snps,rx-queues-to-use = <5>;
		snps,rx-sched-sp;
		queue0 {
			snps,dcb-algorithm;
			snps,priority = <0x1>;
			snps,map-to-dma-channel = <0>;
		};
		queue1 {
			snps,dcb-algorithm;
			snps,priority = <0x2>;
			snps,map-to-dma-channel = <1>;
		};
		queue2 {
			snps,dcb-algorithm;
			snps,priority = <0x4>;
			snps,map-to-dma-channel = <2>;
		};
		queue3 {
			snps,dcb-algorithm;
			snps,priority = <0x8>;
			snps,map-to-dma-channel = <3>;
		};
		queue4 {
			snps,dcb-algorithm;
			snps,priority = <0xf0>;
			snps,map-to-dma-channel = <4>;
		};
	};
};
#endif /* CONFIG_FSSMMX8MP_ETH_A */

#ifdef CONFIG_FSSMMX8MP_ETH_B
&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy1>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy1: ethernet-phy@5 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <5>;
			rtl821x,clkout-disable;
			rtl821x,aldps-enable;
			rtl821x,ssc-rxc-enable;
			rtl821x,ssc-sysclk-enable;
			rtl821x,ssc-clkout-enable;
			rtl821x,led-link = <2>; // LED2 for link indication
			rtl821x,led-act = <0>; // LED0 for activity
			reset-gpios = <&pca6416 12 GPIO_ACTIVE_LOW>;
			reset-assert-us = <10000>;
			reset-deassert-us = <50000>;
			interrupt-parent = <&gpio5>;
			interrupts = <1 IRQ_TYPE_LEVEL_LOW>;
			eee-broken-1000t;
		};
	};
};
#endif /* CONFIG_FSSMMX8MP_ETH_B */

#ifdef CONFIG_FSSMMX8MP_PWM_OUT
&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_PWM_OUT */

#ifdef CONFIG_FSSMMX8MP_BL_CTRL_A
&pwm4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm4>;
	#pwm-cells = <3>;
	keep-power;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_BL_CTRL_A */

#ifdef CONFIG_FSSMMX8MP_BL_CTRL_B
&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	#pwm-cells = <3>;
	keep-power;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_BL_CTRL_B */

&snvs_pwrkey {
	status = "okay";
};

/* Disable CPU RTC - external available */
&snvs_rtc {
	status = "disabled";
};

#ifdef CONFIG_FSSMMX8MP_I2C_CAM0
&i2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";
#if 0
#ifdef CONFIG_FSSMMX8MP_ADC
	ads1015@48 {
		compatible = "ti,ads1015";
		reg = <0x48>;
		#address-cells = <1>;
		#size-cells = <0>;

		channel@4 {
			reg = <4>;
			ti,gain = <3>;
			ti,datarate = <5>;
		};
	};
#endif /* CONFIG_FSSMMX8MP_ADC */

#ifdef CONFIG_FSSMMX8MP_CAMERA_BASLER_daA4200
	basler_csi_a: basler_camera_vvcam@36 {
		compatible = "basler,basler-camera";
		reg = <0x36>;
		csi_id = <0x00>;
		status = "okay";

		port {
			basler_ep_0: endpoint {
				remote-endpoint = <&mipi_csi0_ep>;
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				//link-frequenc = /bits/ 64 <594000000>;
#if 1
				link-frequencies = /bits/ 64 <500000000>;
				max-lane-frequency = /bits/ 64 <750000000>;
				max-pixel-frequency = /bits/ 64 <750000000>;
				max-data-rate = /bits/ 64 <0>;
#endif
			};
		};
	};
#endif

#ifdef CONFIG_FSSMMX8MP_CAMERA_BASLER_daA3840
	basler_camera_vvcam@36 {
		compatible = "basler,basler-camera-vvcam", "basler-camera-vvcam";
		reg = <0x36>;
		csi_id = <0x00>;
		status = "okay";

		port {
			basler_ep_0: endpoint {
				data-lanes = <1 2 3 4>;
				clock-lanes = <0>;
				link-frequencies = /bits/ 64 <750000000>;
				max-lane-frequency = /bits/ 64 <750000000>;
				max-pixel-frequency = /bits/ 64 <500000000>;
				max-data-rate = /bits/ 64 <0>;
				remote-endpoint = <&mipi_csi0_ep>;
			};
		};
	};
#endif
#endif
};
#endif /* CONFIG_FSSMMX8MP_I2C_CAM0 */

#ifdef CONFIG_FSSMMX8MP_I2C_CAM1
&i2c2 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_I2C_CAM1 */

#ifdef CONFIG_FSSMMX8MP_I2C_GP
&i2c3 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";

#ifdef CONFIG_FSSMMX8MP_EEPROM
	/* EEPROM */
	eeprom: eeprom@50 {
		compatible = "atmel,24c64";
		reg = <0x50>;
		pagesize = <8>;
		vcc-supply = <&reg_vref_1v8>;
	};
#endif /* CONFIG_FSSMMX8MP_EEPROM */
};
#endif /* CONFIG_FSSMMX8MP_I2C_GP */

#ifdef CONFIG_FSSMMX8MP_I2C_PM
&i2c4 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_I2C_PM */

#ifdef CONFIG_FSSMMX8MP_I2C_LCD
&i2c5 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c5>;
	status = "okay";
#ifdef CONFIG_FSSMMX8MP_CAPTOUCH_FT5x26
	/* touch I2C */
	focaltech@38 {
		compatible = "focaltech,fts";
		reg = <0x38>;
		/* I2C_B_IRQn */
		interrupt-parent = <&gpio1>;
		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;
		focaltech,irq-gpio = <&gpio1 13 IRQ_TYPE_EDGE_FALLING>;
#ifdef CONFIG_FSSMMX8MP_CAPTOUCH_FT5x26_INVERTED_XY
		focaltech,touchscreen-inverted-x;
		focaltech,touchscreen-inverted-y;
#endif
		/* TOUCH_RSTn */
		focaltech,reset-gpio = <&gpio1 1 GPIO_ACTIVE_LOW>;
		focaltech,num-max-touches = <10>;
		focaltech,display-coords = <0 0 800 480>;
	};
#endif
};
#endif /* CONFIG_FSSMMX8MP_I2C_LCD */

/* I2C_INT */
&i2c6 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c6>;
	status = "okay";

	pmic: pca9450@25 {
		reg = <0x25>;
		compatible = "nxp,pca9450c";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_pmic>;
		interrupt-parent = <&gpio4>;
		interrupts = <19 IRQ_TYPE_LEVEL_LOW>;

		regulators {


			buck1: BUCK1 {
				regulator-name = "BUCK1";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck2: BUCK2 {
				regulator-name = "BUCK2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
				nxp,dvs-run-voltage = <950000>;
				nxp,dvs-standby-voltage = <850000>;
			};

			buck4: BUCK4{
				regulator-name = "BUCK4";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5: BUCK5{
				regulator-name = "BUCK5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6: BUCK6 {
				regulator-name = "BUCK6";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1: LDO1 {
				regulator-name = "LDO1";
				regulator-min-microvolt = <1600000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2: LDO2 {
				regulator-name = "LDO";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1150000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3: LDO3 {
				regulator-name = "LDO3";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4: LDO4 {
				regulator-name = "LDO4";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5: LDO5 {
				regulator-name = "LDO5";
				regulator-compatible = "ldo5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};

#ifdef CONFIG_FSSMMX8MP_EXT_RTC
	rtc85263: rtc85263@51 {
		compatible = "nxp,pcf85263";
		reg = <0x51>;
		clock-out = <PCF85263_CLK_OUT_32p768kHz>;

		quartz-load-capacitance = <PCF85263_QUARTZCAP_12p5pF>;
		quartz-drive-strength = <PCF85263_QUARTZDRIVE_LOW>;
	};
#endif /* CONFIG_FSSMMX8MP_EXT_RTC */

	/* GPIO expander */
	pca6416: gpio@20 {
		compatible = "nxp,pcal6416";
		reg = <0x20>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_pca6416>;
		vcc-supply = <&reg_vref_1v8>;
		gpio-controller;
		#gpio-cells = <2>;
		interrupt-parent = <&gpio4>;
		interrupts = <21 IRQ_TYPE_LEVEL_LOW>;
		reset-gpios = <&gpio4 22 GPIO_ACTIVE_LOW>;
		/* Enable Open-Drain for Port 0 and 1 */
		pcal6416,open-drain;
	};

	/* Temperature sensor 1 at PMIC */
	temp_pmic: temp_pmic@49 {
		compatible = "nxp,pct2075";
		reg = <0x49>;
		vs-supply = <&reg_vref_3v3>;
		#thermal-sensor-cells = <1>;
	};

	/* Temperature sensor 2 at DRAM */
	temp_dram: temp_dram@2c {
		compatible = "nxp,pct2075";
		reg = <0x2c>;
		vs-supply = <&reg_vref_3v3>;
		#thermal-sensor-cells = <1>;
	};
};

#ifdef CONFIG_FSSMMX8MP_SPI_A
&ecspi1 {
	#address-cells = <1>;
	#size-cells = <0>;
	fsl,spi-num-chipselects = <1>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1 &pinctrl_ecspi1_cs>;
	cs-gpios = <0>, <&gpio5 21 GPIO_ACTIVE_LOW>;
	status = "okay";

	spidev@0 {
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
		status = "okay";
	};

	spidev@1 {
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <1>;
		status = "okay";
	};

};
#endif /* CONFIG_FSSMMX8MP_SPI_A */

#ifdef CONFIG_FSSMMX8MP_SPI_B
&ecspi2 {
	#address-cells = <1>;
	#size-cells = <0>;
	fsl,spi-num-chipselects = <1>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2 &pinctrl_ecspi2_cs>;
	cs-gpios = <0>, <&gpio1 3 GPIO_ACTIVE_LOW>;
	status = "okay";

	spidev@0 {
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
		status = "okay";
	};

	spidev@1 {
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <1>;
		status = "okay";
	};

};
#endif /* CONFIG_FSSMMX8MP_SPI_B */

/* Feature Connector J20 - Pins 63, 64 */
#ifdef CONFIG_FSSMMX8MP_CAN_A
&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_CAN_A */

/* CAN Connector J15 */
#ifdef CONFIG_FSSMMX8MP_CAN_B
&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_CAN_B */

#ifdef CONFIG_FSSMMX8MP_I2S_A
&sai2 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clk IMX8MP_CLK_SAI2>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <12288000>;
	clocks = <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI2_IPG>, <&clk IMX8MP_CLK_DUMMY>,
		 <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI2_MCLK1>, <&clk IMX8MP_CLK_DUMMY>,
		 <&clk IMX8MP_CLK_DUMMY>;
	clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3";
	fsl,sai-mclk-direction-output;
	/* sai to clock and frame tx/rx master */
	//fsl,txmasterflag = <1>; // SND_SOC_DAIFMT_CBM_CFM
	//fsl,rxmasterflag = <1>; // SND_SOC_DAIFMT_CBM_CFM
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_I2S_A */

&sdma2 {
	status = "okay";
};

#ifdef CONFIG_FSSMMX8MP_UART_A
/* SER1 */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MP_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_UART_A */

#ifdef CONFIG_FSSMMX8MP_UART_B
/* SER0 (RTSCTS) */
&uart2 {
	/* console */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
#ifdef CONFIG_FSSMMX8MP_UART_B_RTSCTS
	fsl,uart-has-rtscts;
#endif
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_UART_B */

#ifdef CONFIG_FSSMMX8MP_UART_C
/* SER3 */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MP_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_UART_C */

#ifdef CONFIG_FSSMMX8MP_UART_D
/* SER2 (RTSCTS) */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MP_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
#ifdef CONFIG_FSSMMX8MP_UART_D_RTSCTS
	fsl,uart-has-rtscts;
#endif
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_UART_D */

&pcie{
	clkreq-gpio = <&pca6416 15 GPIO_ACTIVE_LOW>;
	reset-gpio = <&pca6416 13 GPIO_ACTIVE_LOW>;
	ext_osc = <0>;
	bus-range = <0x00 0xff>;
	clocks = <&clk IMX8MP_CLK_HSIO_ROOT>,
		 <&clk IMX8MP_CLK_PCIE_AUX>,
		 <&clk IMX8MP_CLK_HSIO_AXI>,
		 <&clk IMX8MP_CLK_PCIE_ROOT>;
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	assigned-clocks = <&clk IMX8MP_CLK_HSIO_AXI>,
			  <&clk IMX8MP_CLK_PCIE_AUX>;
	assigned-clock-rates = <500000000>, <10000000>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_500M>,
					 <&clk IMX8MP_SYS_PLL2_50M>;
	status = "okay";
};

&pcie_ep{
	status = "disabled";
};

&pcie_phy{
	ext_osc = <0>;
	status = "okay";
};

#ifdef CONFIG_FSSMMX8MP_USB_OTG
/* USB_A */
&usb3_phy0 {
	fsl,phy-tx-preemp-amp-tune = <3>;
	fsl,phy-tx-vref-tune = <0xb>;
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb3_0>;
	hnp-disable;
	srp-disable;
	adp-disable;
	usb-role-switch;
	role-switch-default-mode = "none";
	dr_mode = "otg";
	status = "okay";
};
#endif

#ifdef CONFIG_FSSMMX8MP_USB_HOST
/* USB_B */
&usb3_phy1 {
	/* vbus-power-supply = <&ptn5110>; */
	fsl,phy-tx-vref-tune = <0xe>;
	fsl,phy-tx-preemp-amp-tune = <3>;
	fsl,phy-tx-vboost-level = <5>;
	fsl,phy-comp-dis-tune = <7>;
	fsl,pcs-tx-deemph-3p5db = <0x21>;
	fsl,phy-pcs-tx-swing-full = <0x7f>;
	status = "okay";
};


&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb3_1_pwr>;
	resets = <&usb_host_reset>;
	dr_mode = "host";
	status = "okay";
};
#endif

/* SD_C - internal eMCC boot device */
&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	non-removable;
	bus-width = <8>;
	status = "okay";
};

#ifdef CONFIG_FSSMMX8MP_SDIO
/* SD_A - internal Micro-SD */
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>;
	bus-width = <4>;
	status = "okay";
};
#endif /* CONFIG_FSSMMX8MP_SDIO */

#ifdef CONFIG_FSSMMX8MP_WLAN_MARVELL_DRV
/* SD_WLAN */
&usdhc3 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>, <&pinctrl_usdhc3_gpio>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>, <&pinctrl_usdhc3_gpio>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>, <&pinctrl_usdhc3_gpio>;
	vmmc-supply = <&reg_wlan_pdn>;
	vqmmc-supply = <&reg_vref_1v8>;
	fsl,sdio-async-interrupt-enabled;
	pm-ignore-notify;
	keep-power-in-suspend;
	non-removable;
	cap-power-off-card;
	bus-width = <4>;
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	mwifiex: wifi@1 {
		compatible = "marvell,sd8997";
		reg = <1>;
	};
};
#endif

#ifdef CONFIG_FSSMMX8MP_CSI_A
&mipi_csi_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
#if defined (CONFIG_FSSMMX8MP_CAMERA_BASLER_daA4200) || \
    defined (CONFIG_FSSMMX8MP_CAMERA_BASLER_daA3840)
	port@0 {
		reg = <0>;
		mipi_csi0_ep: endpoint {
			remote-endpoint = <&basler_ep_0>;
			data-lanes = <4>;
			csis-hs-settle = <16>;
		};
	};
#endif /* CONFIG_FSSMMX8MP_CAMERA_BASLER_daA4200 */
};
#endif


&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&irqsteer_hdmi {
	status = "okay";
};

&hdmi_pavi {
	status = "okay";
};

&hdmi {
	status = "okay";
};

&hdmiphy {
	status = "okay";
};


&hdmi_blk_ctrl {
	status = "okay";
};


&lcdif1 {
	status = "disabled";
};

&lcdif2 {
	status = "okay";
};

&lcdif3 {
	status = "okay";
	thres-low  = <1 2>;             /* (FIFO * 1 / 2) */
	thres-high = <3 4>;             /* (FIFO * 3 / 4) */

};

&ldb {
	status = "okay";
#ifdef CONFIG_FSSMMX8MP_LVDS_DUAL_CHANNEL
	fsl,dual-channel;
#endif /* CONFIG_FSSMMX8MP_LVDS_DUAL_CHANNEL */

#ifdef CONFIG_FSSMMX8MP_LVDS0
	/* LVDSA or DSI */
	lvds-channel@0 {
		fsl,data-mapping = CONFIG_FSSMMX8MP_LVDS0_CHANNEL_MAPPING;
		fsl,data-width = <CONFIG_FSSMMX8MP_LVDS0_CHANNEL_DATA_WIDTH>;
		status = "okay";

		port@1 {
			reg = <1>;
			lvds0_out: endpoint {
				remote-endpoint = <&panel_lvds0_in>;
			};
		};
	};
#endif

#ifdef CONFIG_FSSMMX8MP_LVDS1
	/* LVDSB */
	lvds-channel@1 {
		fsl,data-mapping = CONFIG_FSSMMX8MP_LVDS1_CHANNEL_MAPPING;
		fsl,data-width = <CONFIG_FSSMMX8MP_LVDS1_CHANNEL_DATA_WIDTH>;
#ifndef CONFIG_FSSMMX8MP_LVDS_DUAL_CHANNEL
		status = "okay";
#endif

		port@1 {
			reg = <1>;
			lvds1_out: endpoint {
				remote-endpoint = <&panel_lvds1_in>;
			};
		};
	};
#endif
};

&ldb_phy {
	status = "okay";
};

&mipi_dsi {
	status = "disabled";
};

&easrc {
	fsl,asrc-rate  = <48000>;
	status = "okay";
};

&vpu_g1 {
	status = "okay";
};

&vpu_g2 {
	status = "okay";
};

&vpu_vc8000e {
	status = "okay";
};

&vpu_v4l2 {
	status = "okay";
};

&gpu_3d {
	status = "okay";
};

&gpu_2d {
	status = "okay";
};

&ml_vipsi {
	status = "okay";
};

&mix_gpu_ml {
	status = "okay";
};

&cameradev {
	status = "okay";
};

&isp_0 {
	/* remove this property because this region used
	 * only by tuning tool
	 * */
	/delete-property/memory-region;
#ifdef CONFIG_FSSMMX8MP_CAMERA_BASLER_daA3840
	status = "okay";
#else
	status = "disabled";
#endif
};

&isi_0 {
#ifdef CONFIG_FSSMMX8MP_CAMERA_BASLER_daA4200
	status = "okay";
#else
	status = "disabled";
#endif
	dma-coherent;
	bsl,dma-invalidate;
	fsl,chain_buf;

	cap_device {
		status = "okay";
	};
#if 0
	m2m_device {
		status = "okay";
	};
#endif
};

&isi_1 {
	status = "disabled";

	cap_device {
		status = "okay";
	};
};

&dsp {
	status = "disabled";
};

&dewarp {
#ifdef CONFIG_FSSMMX8MP_CAMERA_BASLER_daA3840
	status = "okay";
#else
	status = "disabled";
#endif
};

&gpio1 {
gpio-line-names =
 "GPIO_0", "GPIO_1", "GPIO_2", "GPIO_3", "GPIO_4",  "GPIO2",
 "GPIO_6",  "GPIO1",  "GPIO3",  "GPIO0","GPIO_10",  "GPIO7",
"GPIO_12","GPIO_13","GPIO_14","GPIO_15","GPIO_16","GPIO_17",
"GPIO_18","GPIO_19","GPIO_20","GPIO_21","GPIO_22","GPIO_23",
"GPIO_24","GPIO_25","GPIO_26","GPIO_27","GPIO_28","GPIO_29",
"GPIO_30","GPIO_31";
};

&gpio2 {
gpio-line-names =
"GPIO_32","GPIO_33","GPIO_34","GPIO_35","GPIO_36","GPIO_37",
"GPIO_38","GPIO_39","GPIO_40","GPIO_41","GPIO_42","GPIO_43",
"GPIO_44","GPIO_45","GPIO_46","GPIO_47","GPIO_48","GPIO_49",
"GPIO_50","GPIO_51","GPIO_52","GPIO_53","GPIO_54","GPIO_55",
"GPIO_56","GPIO_57","GPIO_58","GPIO_59","GPIO_60","GPIO_61",
"GPIO_62","GPIO_63";
};

&gpio3 {
gpio-line-names =
"GPIO_64","GPIO_65","GPIO_66","GPIO_67",  "GPIO8",  "GPIO9",
"GPIO_70","GPIO_71","GPIO_72","GPIO_73","GPIO_74","GPIO_75",
"GPIO_76","GPIO_77", "GPIO12", "GPIO10", "GPIO11","GPIO_81",
"GPIO_82","GPIO_83","GPIO_84","GPIO_85","GPIO_86","GPIO_87",
"GPIO_88","GPIO_89","GPIO_90","GPIO_91", "GPIO13","GPIO_93",
"GPIO_94","GPIO_95";
};

&gpio4 {
gpio-line-names =
 "GPIO_96", "GPIO_97", "GPIO_98", "GPIO_99","GPIO_100","GPIO_101",
"GPIO_102","GPIO_103","GPIO_104","GPIO_105","GPIO_106","GPIO_107",
"GPIO_108","GPIO_109","GPIO_110","GPIO_111","GPIO_112","GPIO_113",
"GPIO_114","GPIO_115","GPIO_116","GPIO_117","GPIO_118","GPIO_119",
"GPIO_120","GPIO_121","GPIO_122","GPIO_123",   "GPIO4","GPIO_125",
"GPIO_126","GPIO_127";
};

&gpio5 {
gpio-line-names =
   "GPIO6","GPIO_129","GPIO_130","GPIO_131","GPIO_132",   "GPIO5",
"GPIO_134","GPIO_135","GPIO_136","GPIO_137","GPIO_138","GPIO_139",
"GPIO_140","GPIO_141","GPIO_142","GPIO_143","GPIO_144","GPIO_145",
"GPIO_146","GPIO_147","GPIO_148","GPIO_149","GPIO_150","GPIO_151",
"GPIO_152","GPIO_153","GPIO_154","GPIO_155","GPIO_156","GPIO_157",
"GPIO_158","GPIO_159";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	imx8mp-fssmmx8mp {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				/* GPIO0 */
				MX8MP_IOMUXC_GPIO1_IO09__GPIO1_IO09			0x00014
				/* GPIO1 */
				MX8MP_IOMUXC_GPIO1_IO07__GPIO1_IO07			0x00014
				/* GPIO2 */
				MX8MP_IOMUXC_GPIO1_IO05__GPIO1_IO05			0x00014
				/* GPIO3 */
				MX8MP_IOMUXC_GPIO1_IO08__GPIO1_IO08			0x00014
				/* GPIO4 */
				MX8MP_IOMUXC_SAI3_RXFS__GPIO4_IO28			0x00014
#ifndef CONFIG_FSSMMX8MP_PWM_OUT
				/* GPIO5 / PWM_OUT */
				MX8MP_IOMUXC_SPDIF_EXT_CLK__GPIO5_IO05		0x00004
#endif
				/* GPIO6 */
				MX8MP_IOMUXC_SAI3_TXC__GPIO5_IO00			0x00014
				/* GPIO7 */
				MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11			0x00014
				/* GPIO8 */
				MX8MP_IOMUXC_NAND_CE3_B__GPIO3_IO04			0x00014
				/* GPIO9 */
				MX8MP_IOMUXC_NAND_CLE__GPIO3_IO05			0x00014
				/* GPIO10 */
				MX8MP_IOMUXC_NAND_RE_B__GPIO3_IO15			0x00014
				/* GPIO11 */
				MX8MP_IOMUXC_NAND_READY_B__GPIO3_IO16		0x00014
				/* GPIO12 */
				MX8MP_IOMUXC_NAND_DQS__GPIO3_IO14			0x00014
				/* GPIO13 */
				MX8MP_IOMUXC_HDMI_CEC__GPIO3_IO28			0x00014
				/* TOUCH_RSTn */
				MX8MP_IOMUXC_GPIO1_IO01__GPIO1_IO01			0x00014
				/* LVDS_RSTn */
				MX8MP_IOMUXC_GPIO1_IO15__GPIO1_IO15			0x00014
				/* LCD0_BL_EN */
				MX8MP_IOMUXC_SAI1_RXC__GPIO4_IO01			0x00104
				/* LCD1_BL_EN */
				MX8MP_IOMUXC_SAI1_RXD1__GPIO4_IO03			0x00104
				/* LCD0_VDD_EN */
				MX8MP_IOMUXC_SAI1_MCLK__GPIO4_IO20			0x00104
				/* LCD1_VDD_EN */
				MX8MP_IOMUXC_SAI1_RXD0__GPIO4_IO02			0x00104
#ifndef CONFIG_FSSMMX8MP_BL_CTRL_A
				/* LCD0_BKLT_PWM */
				MX8MP_IOMUXC_SAI3_MCLK__GPIO5_IO02			0x00004
#endif
#ifndef CONFIG_FSSMMX8MP_BL_CTRL_B
				/* LCD1_BKLT_PWM */
				MX8MP_IOMUXC_SAI5_RXD0__GPIO3_IO21			0x00004
#endif
#ifdef CONFIG_FSSMMX8MP_SECURE
				/* SE050_ENA */
				MX8MP_IOMUXC_GPIO1_IO00__GPIO1_IO00			0x00012
#endif
				/* HDMI_DDC_SCL */
				MX8MP_IOMUXC_HDMI_DDC_SCL__HDMIMIX_HDMI_SCL	0x400001c3
				/* HDMI_DDC_SDA */
				MX8MP_IOMUXC_HDMI_DDC_SDA__HDMIMIX_HDMI_SDA	0x400001c3
				/* HDMI_HPD */
				MX8MP_IOMUXC_HDMI_HPD__HDMIMIX_HDMI_HPD		0x40000019
			>;
		};

#ifdef CONFIG_FSSMMX8MP_SPI_A
		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				MX8MP_IOMUXC_ECSPI1_SCLK__ECSPI1_SCLK		0x82
				MX8MP_IOMUXC_ECSPI1_MOSI__ECSPI1_MOSI		0x82
				MX8MP_IOMUXC_ECSPI1_MISO__ECSPI1_MISO		0x82
			>;
		};

		pinctrl_ecspi1_cs: ecspi1cs {
			fsl,pins = <
				MX8MP_IOMUXC_ECSPI1_SS0__ECSPI1_SS0		0x82
				MX8MP_IOMUXC_I2C4_SDA__GPIO5_IO21		0x40000
			>;
		};
#endif /* CONFIG_FSSMMX8MP_SPI_A */

#ifdef CONFIG_FSSMMX8MP_SPI_B
		pinctrl_ecspi2: ecspi2grp {
			fsl,pins = <
				MX8MP_IOMUXC_ECSPI2_SCLK__ECSPI2_SCLK		0x82
				MX8MP_IOMUXC_ECSPI2_MOSI__ECSPI2_MOSI		0x82
				MX8MP_IOMUXC_ECSPI2_MISO__ECSPI2_MISO		0x82
			>;
		};

		pinctrl_ecspi2_cs: ecspi2cs {
			fsl,pins = <
				MX8MP_IOMUXC_ECSPI2_SS0__ECSPI2_SS0		0x82
				MX8MP_IOMUXC_GPIO1_IO03__GPIO1_IO03		0x40000
			>;
		};
#endif /* CONFIG_FSSMMX8MP_SPI_B */

#ifdef CONFIG_FSSMMX8MP_ETH_A
		pinctrl_eqos: eqosgrp {
			fsl,pins = <
				MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC	0x3
				MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO	0x3
				MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x91
				MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x11
				MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x11
				MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x91
				MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK	0x11
				MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x11
				MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0		0x1f
				MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1		0x1f
				MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2		0x1f
				MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3		0x1f
				MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x1f
				MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK	0x1f
				/* ETH_A_PHY_INTn */
				MX8MP_IOMUXC_GPIO1_IO06__GPIO1_IO06		0x39
			>;
		};
#endif /* CONFIG_FSSMMX8MP_ETH_A */

#ifdef CONFIG_FSSMMX8MP_ETH_B
		pinctrl_fec: fecgrp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI1_RXD2__ENET1_MDC		0x3
				MX8MP_IOMUXC_SAI1_RXD3__ENET1_MDIO		0x3
				MX8MP_IOMUXC_SAI1_RXD4__ENET1_RGMII_RD0		0x91
				MX8MP_IOMUXC_SAI1_RXD5__ENET1_RGMII_RD1		0x11
				MX8MP_IOMUXC_SAI1_RXD6__ENET1_RGMII_RD2		0x11
				MX8MP_IOMUXC_SAI1_RXD7__ENET1_RGMII_RD3		0x91
				MX8MP_IOMUXC_SAI1_TXC__ENET1_RGMII_RXC		0x11
				MX8MP_IOMUXC_SAI1_TXFS__ENET1_RGMII_RX_CTL	0x11
				MX8MP_IOMUXC_SAI1_TXD0__ENET1_RGMII_TD0		0x1f
				MX8MP_IOMUXC_SAI1_TXD1__ENET1_RGMII_TD1		0x1f
				MX8MP_IOMUXC_SAI1_TXD2__ENET1_RGMII_TD2		0x1f
				MX8MP_IOMUXC_SAI1_TXD3__ENET1_RGMII_TD3		0x1f
				MX8MP_IOMUXC_SAI1_TXD4__ENET1_RGMII_TX_CTL	0x1f
				MX8MP_IOMUXC_SAI1_TXD5__ENET1_RGMII_TXC		0x1f
				/* ETH_B_PHY_INTn */
				MX8MP_IOMUXC_SAI3_TXD__GPIO5_IO01		0x39
			>;
		};
#endif /* CONFIG_FSSMMX8MP_ETH_B */

#ifdef CONFIG_FSSMMX8MP_PWM_OUT
		pinctrl_pwm1: pwm1grp {
			fsl,pins = <
				MX8MP_IOMUXC_SPDIF_EXT_CLK__PWM1_OUT	0x116
			>;
		};
#endif /* CONFIG_FSSMMX8MP_PWM_OUT */

#ifdef CONFIG_FSSMMX8MP_BL_CTRL_A
		pinctrl_pwm4: pwm4grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI3_MCLK__PWM4_OUT	0x116
			>;
		};
#endif /* CONFIG_FSSMMX8MP_BL_CTRL_A */

#ifdef CONFIG_FSSMMX8MP_BL_CTRL_B
		pinctrl_pwm2: pwm2grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI5_RXD0__PWM2_OUT	0x116
			>;
		};
#endif /* CONFIG_FSSMMX8MP_BL_CTRL_B */

#ifdef CONFIG_FSSMMX8MP_CAN_A
		pinctrl_flexcan1: flexcan1grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI5_RXD2__CAN1_RX		0x154
				MX8MP_IOMUXC_SAI5_RXD1__CAN1_TX		0x154
			>;
		};
#endif /* CONFIG_FSSMMX8MP_CAN_A */

#ifdef CONFIG_FSSMMX8MP_CAN_B
		pinctrl_flexcan2: flexcan2grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI5_MCLK__CAN2_RX		0x154
				MX8MP_IOMUXC_SAI5_RXD3__CAN2_TX		0x154
			>;
		};
#endif /* CONFIG_FSSMMX8MP_CAN_B */

#ifdef CONFIG_FSSMMX8MP_I2C_CAM0
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX8MP_IOMUXC_I2C1_SCL__I2C1_SCL		0x400001c3
				MX8MP_IOMUXC_I2C1_SDA__I2C1_SDA		0x400001c3
			>;
		};
#endif /* CONFIG_FSSMMX8MP_I2C_CAM0 */

#ifdef  CONFIG_FSSMMX8MP_I2C_CAM1
		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL		0x400001c3
				MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA		0x400001c3
			>;
		};
#endif /*  CONFIG_FSSMMX8MP_I2C_CAM1 */

#ifdef  CONFIG_FSSMMX8MP_I2C_GP
		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX8MP_IOMUXC_I2C3_SCL__I2C3_SCL			0x400001c3
				MX8MP_IOMUXC_I2C3_SDA__I2C3_SDA			0x400001c3
			>;
		};
#endif /*  CONFIG_FSSMMX8MP_I2C_GP */

#ifdef  CONFIG_FSSMMX8MP_I2C_PM
		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX8MP_IOMUXC_NAND_CE1_B__I2C4_SCL			0x400001c3
				MX8MP_IOMUXC_NAND_CE2_B__I2C4_SDA			0x400001c3
			>;
		};
#endif /*  CONFIG_FSSMMX8MP_I2C_PM */

#ifdef  CONFIG_FSSMMX8MP_I2C_LCD
		pinctrl_i2c5: i2c5grp {
			fsl,pins = <
				MX8MP_IOMUXC_SPDIF_TX__I2C5_SCL			0x400001c3
				MX8MP_IOMUXC_SPDIF_RX__I2C5_SDA			0x400001c3
			>;
		};
#endif /*  CONFIG_FSSMMX8MP_I2C_LCD */

		pinctrl_i2c6: i2c6grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI5_RXFS__I2C6_SCL		0x400001c3
				MX8MP_IOMUXC_SAI5_RXC__I2C6_SDA			0x400001c3
			>;
		};

		pinctrl_pmic: pmicirq {
			fsl,pins = <
				MX8MP_IOMUXC_SAI1_TXD7__GPIO4_IO19	0x41
			>;
		};

#ifdef CONFIG_FSSMMX8MP_I2S_A
		pinctrl_sai2: sai2grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI2_TXFS__AUDIOMIX_SAI2_TX_SYNC	0xd6
				MX8MP_IOMUXC_SAI2_TXC__AUDIOMIX_SAI2_TX_BCLK	0xd6
				MX8MP_IOMUXC_SAI2_TXD0__AUDIOMIX_SAI2_TX_DATA00	0xd6
				MX8MP_IOMUXC_SAI2_RXD0__AUDIOMIX_SAI2_RX_DATA00	0xd6
				MX8MP_IOMUXC_SAI2_MCLK__AUDIOMIX_SAI2_MCLK	0xd6
			>;
		};
#endif /* CONFIG_FSSMMX8MP_I2S_A */

#ifdef CONFIG_FSSMMX8MP_UART_A
		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MP_IOMUXC_UART1_RXD__UART1_DCE_RX 	0x140
				MX8MP_IOMUXC_UART1_TXD__UART1_DCE_TX	0x140
			>;
		};
#endif /* CONFIG_FSSMMX8MP_UART_A */

#ifdef CONFIG_FSSMMX8MP_UART_B
		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x140
				MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x140
#ifdef CONFIG_FSSMMX8MP_UART_B_RTSCTS
				MX8MP_IOMUXC_SAI3_RXC__UART2_DCE_CTS	0x140
				MX8MP_IOMUXC_SAI3_RXD__UART2_DCE_RTS	0x140
#endif
			>;
		};
#endif /* CONFIG_FSSMMX8MP_UART_B */

#ifdef CONFIG_FSSMMX8MP_UART_C
		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX8MP_IOMUXC_UART3_RXD__UART3_DCE_RX	0x140
				MX8MP_IOMUXC_UART3_TXD__UART3_DCE_TX	0x140
			>;
		};
#endif /* CONFIG_FSSMMX8MP_UART_C */


#ifdef CONFIG_FSSMMX8MP_UART_D
		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX8MP_IOMUXC_UART4_RXD__UART4_DCE_RX	0x140
				MX8MP_IOMUXC_UART4_TXD__UART4_DCE_TX	0x140
#ifdef CONFIG_FSSMMX8MP_UART_D_RTSCTS
				MX8MP_IOMUXC_NAND_DATA02__UART4_DCE_CTS	0x140
				MX8MP_IOMUXC_NAND_DATA03__UART4_DCE_RTS	0x140
#endif
			>;
		};
#endif /* CONFIG_FSSMMX8MP_UART_D */

#ifdef CONFIG_FSSMMX8MP_USB_OTG
		pinctrl_usb3_0: usb0grp {
			fsl,pins = <
				MX8MP_IOMUXC_GPIO1_IO10__USB1_ID	0x19
				MX8MP_IOMUXC_GPIO1_IO12__USB1_PWR	0x19
			>;
		};
#endif /* CONFIG_FSSMMX8MP_USB_OTG */

#ifdef CONFIG_FSSMMX8MP_USB_HOST
		pinctrl_usb3_1_pwr: usb1grp {
			fsl,pins = <
				MX8MP_IOMUXC_GPIO1_IO14__USB2_PWR	0x19
			>;
		};
#endif /* CONFIG_FSSMMX8MP_USB_HOST */

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x190
				MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d0
				MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d0
				MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d0
				MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d0
				MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d0
				MX8MP_IOMUXC_SD1_DATA4__USDHC1_DATA4	0x1d0
				MX8MP_IOMUXC_SD1_DATA5__USDHC1_DATA5	0x1d0
				MX8MP_IOMUXC_SD1_DATA6__USDHC1_DATA6	0x1d0
				MX8MP_IOMUXC_SD1_DATA7__USDHC1_DATA7	0x1d0
				MX8MP_IOMUXC_SD1_STROBE__USDHC1_STROBE  0x190
				MX8MP_IOMUXC_SD1_RESET_B__USDHC1_RESET_B 0x144
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp-100mhz {
			fsl,pins = <
				MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x194
				MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d4
				MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d4
				MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d4
				MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d4
				MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d4
				MX8MP_IOMUXC_SD1_DATA4__USDHC1_DATA4	0x1d4
				MX8MP_IOMUXC_SD1_DATA5__USDHC1_DATA5	0x1d4
				MX8MP_IOMUXC_SD1_DATA6__USDHC1_DATA6	0x1d4
				MX8MP_IOMUXC_SD1_DATA7__USDHC1_DATA7	0x1d4
				MX8MP_IOMUXC_SD1_STROBE__USDHC1_STROBE  0x194
				MX8MP_IOMUXC_SD1_RESET_B__USDHC1_RESET_B 0x144
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp-200mhz {
			fsl,pins = <
				MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x196
				MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d6
				MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d6
				MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d6
				MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d6
				MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d6
				MX8MP_IOMUXC_SD1_DATA4__USDHC1_DATA4	0x1d6
				MX8MP_IOMUXC_SD1_DATA5__USDHC1_DATA5	0x1d6
				MX8MP_IOMUXC_SD1_DATA6__USDHC1_DATA6	0x1d6
				MX8MP_IOMUXC_SD1_DATA7__USDHC1_DATA7	0x1d6
				MX8MP_IOMUXC_SD1_STROBE__USDHC1_STROBE  0x196
				MX8MP_IOMUXC_SD1_RESET_B__USDHC1_RESET_B 0x144
			>;
		};

#ifdef CONFIG_FSSMMX8MP_SDIO
		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x190
				MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d0
				MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
				MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
				MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
				MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
				MX8MP_IOMUXC_SD2_CD_B__USDHC2_CD_B	0x190
				MX8MP_IOMUXC_SD2_WP__USDHC2_WP	0x190
			>;
		};

		pinctrl_usdhc2_100mhz: usdhc2grp-100mhz {
			fsl,pins = <
				MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x194
				MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d4
				MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d4
				MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d4
				MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d4
				MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d4
				MX8MP_IOMUXC_SD2_CD_B__USDHC2_CD_B	0x194
				MX8MP_IOMUXC_SD2_WP__USDHC2_WP	0x194
			>;
		};

		pinctrl_usdhc2_200mhz: usdhc2grp-200mhz {
			fsl,pins = <
				MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x196
				MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d6
				MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d6
				MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d6
				MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d6
				MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d6
				MX8MP_IOMUXC_SD2_CD_B__USDHC2_CD_B	0x196
				MX8MP_IOMUXC_SD2_WP__USDHC2_WP	0x196
			>;
		};
#endif

#ifdef CONFIG_FSSMMX8MP_WLAN_MARVELL_DRV
		/* WLAN */
		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x190
				MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d0
				MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d0
				MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d0
				MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d0
				MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d0
			>;
		};

		pinctrl_usdhc3_100mhz: usdhc3grp-100mhz {
			fsl,pins = <
				MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x194
				MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d4
				MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d4
				MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d4
				MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d4
				MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d4
			>;
		};

		pinctrl_usdhc3_200mhz: usdhc3grp-200mhz {
			fsl,pins = <
				MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x196
				MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d6
				MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d6
				MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d6
				MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d6
				MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d6
			>;
		};

		pinctrl_usdhc3_gpio: usdhc3grp-gpio {
			fsl,pins = <
				MX8MP_IOMUXC_SAI1_TXD6__GPIO4_IO18	0x144
			>;
		};
#endif

		pinctrl_pca6416: pca6416grp {
			fsl,pins = <
				MX8MP_IOMUXC_SAI2_RXFS__GPIO4_IO21	0x144
				MX8MP_IOMUXC_SAI2_RXC__GPIO4_IO22	0x14
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX8MP_IOMUXC_GPIO1_IO02__WDOG1_WDOG_B	0x1c6
			>;
		};
	};
};

